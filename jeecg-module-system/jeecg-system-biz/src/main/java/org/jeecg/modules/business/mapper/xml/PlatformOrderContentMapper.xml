<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.business.mapper.PlatformOrderContentMapper">


    <delete id="deleteByMainId" parameterType="java.lang.String">
        DELETE
        FROM platform_order_content
        WHERE platform_order_id = #{mainId}
    </delete>
    <delete id="batchDeleteByID">
        <if test="IDs.size != 0">
            DELETE FROM platform_order_content
            WHERE id IN
            <foreach
                    collection="IDs"
                    separator=","
                    item="item"
                    index="index"
                    open="("
                    close=")"
            >
                #{item}
            </foreach>
        </if>

    </delete>

    <select id="selectByMainId" parameterType="java.lang.String"
            resultType="org.jeecg.modules.business.entity.PlatformOrderContent">
        SELECT *
        FROM platform_order_content
        WHERE platform_order_id = #{mainId}    </select>

    <select id="selectClientVersionByMainId" parameterType="java.lang.String"
            resultType="org.jeecg.modules.business.entity.ClientPlatformOrderContent">
        SELECT *
        FROM platform_order_content
        WHERE platform_order_id = #{mainId}    </select>

    <select id="searchOrderContent" resultType="org.jeecg.modules.business.vo.SkuQuantity">
        SELECT sku_id as 'key', sum(quantity) AS 'value'
        FROM platform_order_content
        WHERE erp_status &lt;&gt; 5
        AND platform_order_id IN
        <foreach collection="list" index="i" item="item" open="(" separator="," close=")">#{item}</foreach>
        GROUP BY sku_id
    </select>

    <select id="fetchOrderContent" parameterType="java.lang.String"
            resultType="org.jeecg.modules.business.entity.PlatformOrderContent">
        SELECT *
        FROM platform_order_content
        WHERE erp_status &lt;&gt; 5
        AND platform_order_id IN <foreach collection="list" index="i" item="item" open="(" separator="," close=")">#{item}</foreach>
    </select>

    <select id="searchSkuDetail"
            resultType="org.jeecg.modules.business.vo.SkuDetail"
            resultMap="skuDetailResultMap">
        SELECT *
        FROM sku_price_promotion
        WHERE sku_id IN
        <foreach collection="list" index="i" item="item" open="(" separator="," close=")">#{item}</foreach>
    </select>
    <select id="getAllWeightsDiscountsServiceFees"
            resultType="org.jeecg.modules.business.vo.SkuWeightDiscountServiceFees">
        SELECT *
        FROM sku_weight_discount_service_fees
    </select>


    <resultMap id="skuDetailResultMap" type="org.jeecg.modules.business.vo.SkuDetail">
        <constructor>
            <idArg column="sku_id"
                   javaType="String"/>
            <arg column="erp_code"
                 javaType="String"/>
            <arg column="image_source"
                 javaType="String"/>
            <arg column="name_en"
                 javaType="String"/>
            <arg column="name_zh"
                 javaType="String"/>
            <arg javaType="org.jeecg.modules.business.entity.SkuPrice"
                 resultMap="skuPriceResultMap"/>
            <arg javaType="org.jeecg.modules.business.entity.Promotion"
                 resultMap="promotionResultMap"/>
        </constructor>
    </resultMap>

    <resultMap id="skuPriceResultMap" type="org.jeecg.modules.business.entity.SkuPrice">
        <id property="id" column="price_id" javaType="string"/>
        <result property="skuId" column="sku_id" javaType="string"/>
        <result property="price" column="price"/>
        <result property="threshold" column="threshold"/>
        <result property="discountedPrice" column="discounted_price"/>
        <result property="date" column="price_date"/>
        <result property="priceRmb" column="price_rmb"/>
        <result property="discountedPriceRmb" column="discounted_price_rmb"/>
    </resultMap>

    <resultMap id="promotionResultMap" type="org.jeecg.modules.business.entity.Promotion">
        <constructor>
            <idArg column="promotion_id" javaType="String"/>
            <arg column="promo_milestone" javaType="_int"/>
            <arg column="quantity_purchased" javaType="_int"/>
            <arg column="discount" javaType="decimal"/>
        </constructor>
    </resultMap>

    <select id="findUninvoicedOrderContentsForShopsAndStatus" resultType="org.jeecg.modules.business.entity.PlatformOrderContent">
        SELECT poc.*
        FROM platform_order_content poc
        JOIN platform_order po ON poc.platform_order_id = po.id
        WHERE po.shop_id IN
        <foreach
                collection="shopIDs"
                index="index"
                item="shop"
                open="("
                close=")"
                separator=",">
            #{shop}
        </foreach>
        AND po.order_time >= #{begin}
        AND #{end} >= po.order_time
        AND po.shipping_invoice_number IS NULL
        AND poc.erp_status IN
        <foreach
                collection="erpStatuses"
                index="index"
                item="erpStatus"
                open="("
                close=")"
                separator=",">
            #{erpStatus}
        </foreach>
    </select>

    <select id="findUninvoicedShippedOrderContents" resultType="org.jeecg.modules.business.entity.PlatformOrderContent">
        SELECT poc.*
        FROM platform_order_content poc
                 JOIN platform_order po ON poc.platform_order_id = po.id
                 JOIN shop s ON po.shop_id = s.id
        WHERE po.shipping_invoice_number IS NULL
          AND poc.erp_status = 3
    </select>

    <update id="batchUpdateForPurchase">
        UPDATE platform_order_content poc
        SET po.update_by = 'mabang api',
        po.update_time = NOW(),
        shop_id =
        case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then shopErpToId(#{item.shopErpCode})
        </foreach>
        end,
        logistic_channel_name = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.logisticChannelName}
        </foreach>
        end,
        platform_order_id = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.platformOrderId}
        </foreach>
        end,
        platform_order_number = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.platformOrderNumber}
        </foreach>
        end,
        erp_order_id = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.erpOrderId}
        </foreach>
        end,
        tracking_number = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.trackingNumber}
        </foreach>
        end,
        internal_tracking_number = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.trackingNumber1}
        </foreach>
        end,
        order_time = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.orderTime}
        </foreach>
        end,
        shipping_time = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.shippingTime}
        </foreach>
        end,
        recipient = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.recipient}
        </foreach>
        end,
        country = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.country}
        </foreach>
        end,
        postcode = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.postcode}
        </foreach>
        end,
        erp_status = case id
        <foreach collection="orders" separator=" " open="" close="" index="index" item="item">
            when #{item.id} then #{item.status}
        </foreach>
        end
        where id in
        <foreach collection="orders" separator="," open="(" close=")" index="index" item="item">
            #{item.id}
        </foreach>

    </update>
    <select id="fetchPlatformOrderContentsToArchive" resultType="org.jeecg.modules.business.entity.PlatformOrderContent">
        SELECT *
        FROM platform_order_content
        WHERE platform_order_id IN
        <foreach collection="orderIDs" separator="," open="(" close=")" index="index" item="orderID">
            #{orderID}
        </foreach>;
    </select>
    <insert id="insertPlatformOrderContentsArchives" parameterType="list">
        INSERT INTO platform_order_content_delete(id, create_by, create_time,
                                                    update_by, update_time,
                                                    platform_order_id, sku_id,
                                                    quantity, purchase_fee,
                                                    shipping_fee, service_fee,
                                                    vat, status, erp_status,
                                                    product_available, picking_fee)
        VALUES
        <foreach collection="orderContents" separator="," open="" close="" item="content" index="index">
            (
            #{content.id},
            #{content.createBy},
            #{content.createTime},
            #{content.updateBy},
            #{content.updateTime},
            #{content.platformOrderId},
            #{content.skuId},
            #{content.quantity},
            #{content.purchaseFee},
            #{content.shippingFee},
            #{content.serviceFee},
            #{content.vat},
            #{content.status},
            #{content.erpStatus},
            #{content.productAvailable},
            #{content.pickingFee}
            )
        </foreach>;
    </insert>
    <update id="cancelInvoice">
        UPDATE platform_order_content poc
        JOIN platform_order po ON poc.platform_order_id = po.id
        JOIN shipping_invoice si ON po.shipping_invoice_number = si.invoice_number
        JOIN shop s ON po.shop_id = s.id
        JOIN client c ON s.owner_id = c.id
        SET poc.picking_fee  = 0.0,
            poc.shipping_fee = NULL,
            poc.service_fee  = NULL,
            poc.vat          = NULL,
            poc.purchase_fee = 0.0,
            poc.erp_status =
                CASE
                    WHEN poc.erp_status = '4' THEN '3'
                    WHEN poc.erp_status = '2' AND si.create_by = 'system' THEN '1'
                ELSE poc.erp_status
                END
        WHERE po.shipping_invoice_number = #{invoiceNumber}
        AND c.id = #{clientId};
    </update>
    <update id="cancelBatchInvoice">
        UPDATE platform_order_content
        SET picking_fee = 0.0,
        shipping_fee = NULL,
        service_fee = NULL,
        vat = NULL,
        purchase_fee = 0.0,
        erp_status =
            CASE erp_status
                WHEN '4' THEN '3'
            ELSE erp_status
            END
        WHERE platform_order_id IN
        (SELECT id FROM platform_order
        WHERE shipping_invoice_number IN
        <foreach collection="invoiceNumbers" separator="," open="(" close=")" index="index" item="invoiceNumber">
            #{invoiceNumber}
        </foreach>);
    </update>
    <select id="searchSkuPrice" resultType="org.jeecg.modules.business.entity.SkuPrice">
        SELECT DISTINCT * FROM sku_price
        WHERE sku_id IN
        <foreach collection="skuIds" separator="," open="(" close=")" index="index" item="skuId">
            #{skuId}
        </foreach>;
    </select>
    <select id="findOrderContentsWithMissingStock" resultType="org.jeecg.modules.business.entity.PlatformOrderContent">
        SELECT *
        FROM platform_order_content
        WHERE platform_order_id IN
            <foreach collection="orderIds" separator="," open="(" close=")" index="index" item="orderId">
                #{orderId}
            </foreach>
            AND erp_status IN ('1','2')
            AND product_available = 0
            AND virtual_product_available = 0;
    </select>
    <select id="findOrderContentsWithStock" resultType="org.jeecg.modules.business.entity.PlatformOrderContent">
        SELECT *
        FROM platform_order_content
        WHERE platform_order_id IN
            <foreach collection="orderIds" separator="," open="(" close=")" index="index" item="orderId">
                #{orderId}
            </foreach>
            AND erp_status IN ('1','2')
            AND product_available = 1
            OR virtual_product_available = 1;
    </select>

    <select id="searchShoumanOrderContent"
            resultType="org.jeecg.modules.business.entity.ShoumanOrderContent" resultMap="shoumanOrderContentResultMap">
        select sh.erp_code,
               po.platform_order_id,
               po.platform_order_number,
               po.postcode,
               po.recipient,
               po.city,
               po.country,
               poc.id as platform_order_content_id,
               poc.customization_data,
               poc.quantity,
               sc.product_name,
               ssr.remark,
               sc.price,
               sc.image_url,
               sc.sku,
               sc.is_necklace,
               sc.is_gem,
               sr.content_rec_regex,
               sr.content_ext_regex,
               sr.prefix,
               sr.is_size_regex
        from platform_order_content poc
                 join platform_order po on poc.platform_order_id = po.id
                 join shop sh on po.shop_id = sh.id
                 join sku s on poc.sku_id = s.id
                 join shouman_sku_relation ssr on s.id = ssr.sku_id
                 join shouman_category sc on ssr.shouman_category_id = sc.id
                 join shouman_regex sr on sc.id = sr.shouman_category_id
        where poc.erp_status in (1,2)
          and sr.is_active = 1
          and po.platform_order_id not in (select platform_order_id from shouman_order);
    </select>

    <resultMap id="shoumanOrderContentResultMap" type="org.jeecg.modules.business.entity.ShoumanOrderContent">
        <id property="platformOrderContentId" column="platform_order_content_id" javaType="string"/>
        <result property="shopErpCode" column="erp_code" javaType="string"/>
        <result property="platformOrderId" column="platform_order_id" javaType="string"/>
        <result property="platformOrderNumber" column="platform_order_number" javaType="string"/>
        <result property="postcode" column="postcode" javaType="string"/>
        <result property="recipient" column="recipient" javaType="string"/>
        <result property="city" column="city" javaType="string"/>
        <result property="country" column="country" javaType="string"/>
        <result property="customizationData" column="customization_data" javaType="string"/>
        <result property="quantity" column="quantity"/>
        <result property="productName" column="product_name" javaType="string"/>
        <result property="remark" column="remark" javaType="string"/>
        <result property="price" column="price"/>
        <result property="imageUrl" column="image_url" javaType="string"/>
        <result property="sku" column="sku" javaType="string"/>
        <result property="isNecklace" column="is_necklace" javaType="boolean"/>
        <result property="isGem" column="is_gem" javaType="boolean"/>
        <collection property="regexList" ofType="org.jeecg.modules.business.entity.ShoumanRegex">
            <result property="contentRecRegex" column="content_rec_regex" javaType="string"/>
            <result property="contentExtRegex" column="content_ext_regex" javaType="string"/>
            <result property="prefix" column="prefix" javaType="string"/>
            <result property="isSizeRegex" column="is_size_regex" javaType="string"/>
        </collection>
    </resultMap>

    <select id="searchShoumanOrderContentByPlatformOrderId"
            resultType="org.jeecg.modules.business.entity.ShoumanOrderContent" resultMap="shoumanOrderContentResultMap">
        select sh.erp_code,
               po.platform_order_id,
               po.platform_order_number,
               po.postcode,
               po.recipient,
               po.city,
               po.country,
               poc.id as platform_order_content_id,
               poc.customization_data,
               poc.quantity,
               sc.product_name,
               ssr.remark,
               sc.price,
               sc.image_url,
               sc.sku,
               sc.is_necklace,
               sc.is_gem,
               sr.content_rec_regex,
               sr.content_ext_regex,
               sr.prefix,
               sr.is_size_regex
        from platform_order_content poc
                 join platform_order po on poc.platform_order_id = po.id
                 join shop sh on po.shop_id = sh.id
                 join sku s on poc.sku_id = s.id
                 join shouman_sku_relation ssr on s.id = ssr.sku_id
                 join shouman_category sc on ssr.shouman_category_id = sc.id
                 join shouman_regex sr on sc.id = sr.shouman_category_id
        where poc.erp_status in (1,2)
          and sr.is_active = 1
          and po.platform_order_id = #{platformOrderId};
    </select>
</mapper>
