<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.business.mapper.PlatformOrderMapper">

    <sql id="pagePendingOrderByClientId">
        SELECT p.*
        FROM platform_order p
                 JOIN shop s ON p.shop_id = s.id
                 JOIN client c ON s.owner_id = c.id
        WHERE c.id = #{clientId}
          AND p.status = 2
    </sql>

    <sql id="pagePurchasingOrderByClientId">
        SELECT p.*
        FROM platform_order p
                 JOIN shop s ON p.shop_id = s.id
                 JOIN client c ON s.owner_id = c.id
        WHERE c.id = #{clientId}
          AND p.status = 3
    </sql>

    <sql id="pageProcessedOrderByClientId">
        SELECT p.*
        FROM platform_order p
                 JOIN shop s ON p.shop_id = s.id
                 JOIN client c ON s.owner_id = c.id
        WHERE c.id = #{clientId}
          AND p.status = 1
    </sql>

    <sql id="allOrderByClientId">
        SELECT p.*
        FROM platform_order p
                 JOIN shop s ON p.shop_id = s.id
                 JOIN client c ON s.owner_id = c.id
        WHERE c.id = #{clientId}
    </sql>
    <insert id="insertFromMabangOrder" parameterType="org.jeecg.modules.business.domain.api.mabang.getorderlist.Order">
        INSERT INTO platform_order(id, create_by,
                                   create_time, update_by,
                                   update_time, shop_id,
                                   logistic_channel_name, platform_order_id,
                                   platform_order_number, tracking_number,
                                   order_time, shipping_time,
                                   recipient, country, status, can_send)
        SELECT #{id},
               'admin',
               NOW(),
               'admin',
               NOW(),
               shop.id,
               #{logisticChannelName},
               #{platformOrderId},
               #{platformOrderNumber},
               #{trackingNumber},
               #{orderTime},
               #{shippingTime},
               #{recipient},
               #{country},
               #{status},
               #{canSend}
        FROM shop
        WHERE erp_code = #{shopErpCode}
    </insert>

    <select id="pagePendingOrderByClientId"
            resultType="org.jeecg.modules.business.vo.clientPlatformOrder.ClientPlatformOrderPage">
        <include refid="pagePendingOrderByClientId"/>
        LIMIT #{offset}, #{size}
    </select>

    <select id="pagePurchasingOrderByClientId"
            resultType="org.jeecg.modules.business.vo.clientPlatformOrder.ClientPlatformOrderPage">
        <include refid="pagePurchasingOrderByClientId"/>
        LIMIT #{offset}, #{size}
    </select>

    <select id="pageProcessedOrderByClientId"
            resultType="org.jeecg.modules.business.vo.clientPlatformOrder.ClientPlatformOrderPage">
        <include refid="pageProcessedOrderByClientId"/>
        LIMIT #{offset}, #{size}
    </select>

    <update id="updateStatus">
        UPDATE platform_order
        SET status = #{status}
        WHERE id = #{orderID}
    </update>

    <update id="updateErpStatusByCode">
        UPDATE platform_order po, platform_order_content poc
        SET po.erp_status = #{erpStatus},
            poc.erp_status = #{erpStatus}
        WHERE po.shipping_invoice_number = #{invoiceCode}
            AND poc.platform_order_id = po.id;
    </update>

    <update id="batchUpdateStatus">
        UPDATE platform_order
        SET status = #{status}
        WHERE id IN
        <foreach collection="orderIDList" item="item" index="index"
                 close=")" open="(" separator=",">
            #{item}
        </foreach>
    </update>
    <update id="updateMergedOrder">
        UPDATE platform_order
        SET target = #{target}
        WHERE platform_order_id IN
        <foreach
                collection="sources"
                separator=","
                index="i"
                item="v"
                open="("
                close=")">
            #{v}
        </foreach>
    </update>

    <select id="queryQuantities" resultType="org.jeecg.modules.business.vo.clientPlatformOrder.section.OrderQuantity">
        SELECT
        sum(IF(status = '1', 1, 0)) as processed,
        sum(IF(status = '2', 1, 0)) as pending,
        sum(IF(status = '3', 1, 0)) as purchasing
        FROM (<include refid="allOrderByClientId"/>) AS t
    </select>

    <select id="findIdByErpCode" resultType="java.lang.String">
        SELECT id
        FROM platform_order
        WHERE platform_order_number = #{1}
    </select>


    <select id="findUninvoicedOrders" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order AS po
        JOIN logistic_channel lc ON po.logistic_channel_name = lc.zh_name
        WHERE po.shop_id IN
        <foreach
                collection="shopIDs"
                index="index"
                item="item"
                open="("
                close=")"
                separator=",">
            #{item}
        </foreach>
        AND lc.warehouse_in_china IN
        <foreach
                collection="warehouses"
                separator=","
                open="("
                close=")"
                index="index"
                item="warehouse"
        >
            #{warehouse}
        </foreach>
        AND shipping_time >= #{begin}
        AND #{end} >= shipping_time
        AND shipping_invoice_number IS NULL
        AND erp_status = 3;
    </select>
    <select id="findUninvoicedOrdersForShopsAndStatus" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE po.shop_id IN
        <foreach
                collection="shopIDs"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND order_time &gt;= #{begin}
        AND order_time &lt;= #{end}
        AND shipping_invoice_number IS NULL
        AND erp_status IN
        <foreach
                collection="erpStatuses"
                separator=","
                open="("
                close=")"
                index="index"
                item="erpStatus"
        >
            #{erpStatus}
        </foreach>
        ;
    </select>
    <select id="findUninvoicedShippedOrders" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT po.*
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE erp_status = 3
          AND shipping_invoice_number IS NULL
    </select>

    <select id="findPreviousInvoice" resultType="java.lang.String">
        SELECT shipping_invoice_number
        FROM platform_order
        WHERE shipping_invoice_number IS NOT NULL
          AND shipping_invoice_number LIKE '%-2%'
        ORDER BY shipping_invoice_number DESC
        LIMIT 1
    </select>

    <select id="findPreviousCompleteInvoice" resultType="java.lang.String">
        SELECT shipping_invoice_number
        FROM platform_order
        WHERE shipping_invoice_number IS NOT NULL
          AND shipping_invoice_number LIKE '%-7%'
        ORDER BY shipping_invoice_number DESC
        LIMIT 1
    </select>

    <select id="findEarliestUninvoicedPlatformOrder" resultType="date">
        SELECT shipping_time
        FROM platform_order AS po
        WHERE shipping_invoice_number IS NULL
            AND shipping_time IS NOT NULL
            AND erp_status = 3
            AND shop_id IN
            <foreach
                    collection="shopIDs"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="shopId"
            >
                #{shopId}
            </foreach>
        ORDER BY shipping_time
        LIMIT 1
    </select>

    <select id="findLatestUninvoicedPlatformOrder" resultType="date">
        SELECT shipping_time
        FROM platform_order AS po
        WHERE shipping_invoice_number IS NULL
            AND shipping_time IS NOT NULL
            AND erp_status = 3
            AND shop_id IN
            <foreach
                    collection="shopIDs"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="shopId"
            >
                #{shopId}
            </foreach>
        ORDER BY shipping_time DESC
        LIMIT 1
    </select>

    <select id="findEarliestUninvoicedPlatformOrderTime" resultType="date">
        SELECT po.order_time FROM platform_order as po
        JOIN shop as s
            ON po.shop_id = s.id
        WHERE po.shipping_invoice_number IS NULL
            AND po.erp_status IN
            <foreach
                    collection="erpStatuses"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="erpStatus"
            >
                #{erpStatus}
            </foreach>
            AND s.active = 1
            AND po.shop_id IN
            <foreach
                    collection="shopIDs"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="shopId"
            >
                #{shopId}
            </foreach>
        ORDER BY po.order_time
        LIMIT 1
    </select>

    <select id="findLatestUninvoicedPlatformOrderTime" resultType="date">
        SELECT po.order_time FROM platform_order as po
        JOIN shop as s
            ON po.shop_id = s.id
        WHERE po.shipping_invoice_number IS NULL
            AND po.erp_status IN
            <foreach
                    collection="erpStatuses"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="erpStatus"
            >
                #{erpStatus}
            </foreach>
            AND s.active = 1
            AND po.shop_id IN
            <foreach
                    collection="shopIDs"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="shopId"
            >
                #{shopId}
            </foreach>
        ORDER BY order_time DESC
        LIMIT 1
    </select>


    <select id="findBySku" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT id,
               create_by,
               create_time,
               update_by,
               update_time,
               shop_id,
               logistic_channel_name,
               platform_order_id,
               platform_order_number,
               tracking_number,
               order_time,
               shipping_time,
               recipient,
               country,
               postcode,
               fret_fee,
               shipping_invoice_number,
               status,
               target,
               erp_order_id,
               erp_status,
               can_send
        FROM sku_platform_order
        WHERE sku_id = #{id}
    </select>
    <select id="findByClient" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM client_platform_order
        <if test="id != null">
            WHERE clientID = #{id}
        </if>

    </select>
    <select id="findByMonthCountryChannel" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order po
        WHERE DATE_FORMAT(po.order_time, '%c') = #{month}
        <if test="country != null">
            AND country = #{country}
        </if>
        <if test="channelName != null">
            AND logistic_channel_name = #{channelName}
        </if>
    </select>
    <select id="allChannels" resultType="java.lang.String">
        SELECT DISTINCT logistic_channel_name
        FROM wia_app.platform_order WHERE logistic_channel_name != '';
    </select>
    <select id="allCountries" resultType="java.lang.String">
        SELECT DISTINCT country
        FROM wia_app.platform_order
    </select>

    <select id="fetchBillCodesOfParcelsWithoutTrace" resultType="java.lang.String">
        SELECT internal_tracking_number
        FROM platform_order
        WHERE logistic_channel_name IN
        <foreach
                collection="transporters"
                separator=","
                open="("
                close=")"
                index="index"
                item="transporter"
        >
            #{transporter}
        </foreach>
          AND shipping_time &gt;= #{startDate}
          AND shipping_time &lt;= #{endDate}
          AND internal_tracking_number NOT IN (SELECT p.bill_code
                                               FROM parcel_trace pt
                                                        JOIN parcel p ON pt.parcel_id = p.id
                                               WHERE pt.scan_type = 'End Delivered')
          AND internal_tracking_number IS NOT NULL;
    </select>

    <select id="fetchUninvoicedOrdersForShops" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT platform_order_id, logistic_channel_name
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE erp_code IN
        <foreach
                collection="shops"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND order_time &gt;= #{startDateTime}
        AND order_time &lt;= #{endDateTime}
        AND shipping_invoice_number IS NULL
        AND erp_status IN (1,2);
    </select>

    <select id="fetchInvoicedShippedOrdersNotInShops" resultType="java.lang.String">
        SELECT platform_order_id
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE erp_code NOT IN
        <foreach
                collection="shops"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND shipping_time &gt;= #{startDateTime}
        AND shipping_time &lt;= #{endDateTime}
        AND shipping_invoice_number IS NOT NULL
        AND erp_status = 3
         <if test="excludedTrackingNumbersRegex != null">
            AND tracking_number NOT REGEXP #{excludedTrackingNumbersRegex}
        </if>
        ;
    </select>

    <select id="fetchOrderInShopsReadyForShopifySync" resultType="org.jeecg.modules.business.entity.PlatformOrderShopSync">
        SELECT po.platform_order_id, COALESCE(po.local_tracking_number, po.tracking_number) as tracking_number,
        s.shopify_prefix, s.shopify_token, po.postcode
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE erp_code IN
        <foreach
                collection="shops"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND ready_for_shopify_sync = 1
        AND shopify_synced = 0
        AND erp_status = 3
        ORDER BY shipping_time;
    </select>

    <select id="fetchOrderInShopsWithoutShopifyNote" resultType="org.jeecg.modules.business.entity.PlatformOrderShopSync">
        SELECT po.platform_order_id, po.tracking_number, s.shopify_prefix, s.shopify_token, po.postcode
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE erp_code IN
        <foreach
                collection="shops"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND erp_status &lt;&gt; 5
        AND shopify_note IS NULL
        ORDER BY order_time;
    </select>

    <select id="fetchOrderInShopsReadyForAbnNumberJob" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT po.*
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE erp_code IN
        <foreach
                collection="shops"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND erp_status &lt;&gt; 5
        AND shopify_note IS NOT NULL
        AND (tax_number IS NULL OR tax_number = '')
        ORDER BY order_time;
    </select>

    <select id="fetchUninvoicedShippedOrderIDInShops" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT po.id
        FROM platform_order po
        JOIN logistic_channel lc ON po.logistic_channel_name = lc.zh_name
        WHERE shipping_invoice_number IS NULL
        AND po.shop_id IN
        <foreach
                collection="shops"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND lc.warehouse_in_china IN
        <foreach
                collection="warehouses"
                separator=","
                open="("
                close=")"
                index="index"
                item="warehouse"
        >
            #{warehouse}
        </foreach>
        AND po.shipping_time between #{startDate} AND #{endDate}
        AND po.erp_status = 3;
    </select>
    <select id="fetchUninvoicedOrderIDInShopsAndOrderTime" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT po.id
        FROM platform_order po
        JOIN logistic_channel lc ON po.logistic_channel_name = lc.zh_name
        WHERE shipping_invoice_number IS NULL
        AND po.shop_id IN
        <foreach
                collection="shops"
                separator=","
                open="("
                close=")"
                index="index"
                item="shop"
        >
            #{shop}
        </foreach>
        AND lc.warehouse_in_china IN
        <foreach
                collection="warehouses"
                separator=","
                open="("
                close=")"
                index="index"
                item="warehouse"
        >
            #{warehouse}
        </foreach>
        AND po.order_time between #{startDate} AND #{endDate}
        AND po.erp_status IN
        <foreach
                collection="erpStatuses"
                separator=","
                open="("
                close=")"
                index="index"
                item="erpStatus"
        >
            #{erpStatus}
        </foreach>;
    </select>
    <select id="fetchOrdersToArchiveBetweenDate" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order po
        WHERE erp_status IN (4,5)
        AND order_time BETWEEN #{startDate} AND #{endDate};
    </select>
    <select id="fetchOrdersToArchiveBeforeDate" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order po
        WHERE erp_status IN (4,5)
        AND order_time &lt; #{endDate};
    </select>
    <select id="findUninvoicedShippingOrdersByShopForClient" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order
        WHERE erp_status IN
        <foreach
                collection="erpStatuses"
                separator=","
                open="("
                close=")"
                index="index"
                item="erpStatus"
        >
            #{erpStatus}
        </foreach>
        AND shipping_invoice_number IS NULL
        AND shop_id IN
        <foreach
                collection="shopIds"
                separator=","
                open="("
                close=")"
                index="index"
                item="shopId"
        >
            #{shopId}
        </foreach>;
    </select>
    <select id="fetchUninvoicedPurchaseOrdersByShopForClient" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order
        WHERE IF(shipping_invoice_number IS NOT NULL, shipping_invoice_number LIKE '%%%%-%%-2%%%',
            shipping_invoice_number IS NULL)
        AND purchase_invoice_number IS NULL
        AND product_available = 0
        AND virtual_product_available = 0
        AND erp_status IN
            <foreach
                    collection="erpStatuses"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="erpStatus"
            >
                #{erpStatus}
            </foreach>
        AND shop_id IN
            <foreach
                    collection="shopIds"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="shopId"
            >
                #{shopId}
            </foreach>;
    </select>
    <select id="findUninvoicedOrdersByShopForClient" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT id, order_time, platform_order_number
        FROM platform_order
        WHERE erp_status IN
        <foreach
                collection="erpStatuses"
                separator=","
                open="("
                close=")"
                index="index"
                item="erpStatus"
        >
            #{erpStatus}
        </foreach>
        AND (shipping_invoice_number IS NULL
            OR (shipping_invoice_number LIKE '%%%%-%%-2%%%'
                AND purchase_invoice_number IS NULL))
        AND shop_id IN
        <foreach
                collection="shopIds"
                separator=","
                open="("
                close=")"
                index="index"
                item="shopId"
        >
            #{shopId}
        </foreach>
        ORDER BY ${column} ${order}
        <if test="size != -1">
            LIMIT #{offset}, #{size}
        </if>
        ;
    </select>
    <insert id="insertPlatformOrdersArchives" parameterType="list">
        INSERT INTO platform_order_delete(id, create_by,
                                          create_time, update_by,
                                          update_time, shop_id,
                                          logistic_channel_name, platform_order_id,
                                          platform_order_number, tracking_number,
                                          order_time, shipping_time,
                                          recipient, country, postcode, status, fret_fee,
                                          order_service_fee, shipping_invoice_number,
                                          target, erp_order_id, erp_status, invoice_logistic_channel_name,
                                          internal_tracking_number, product_available, ready_for_shopify_sync,
                                          can_send, picking_fee, packaging_material_fee)
        VALUES
        <foreach collection="orders" separator="," open="" close="" item="order" index="index">
            (
                #{order.id},
                #{order.createBy},
                #{order.createTime},
                #{order.updateBy},
                #{order.updateTime},
                #{order.shopId},
                #{order.logisticChannelName},
                #{order.platformOrderId},
                #{order.platformOrderNumber},
                #{order.trackingNumber},
                #{order.orderTime},
                #{order.shippingTime},
                #{order.recipient},
                #{order.country},
                #{order.postcode},
                #{order.status},
                #{order.fretFee},
                #{order.orderServiceFee},
                #{order.shippingInvoiceNumber},
                #{order.target},
                #{order.erpOrderId},
                #{order.erpStatus},
                #{order.invoiceLogisticChannelName},
                #{order.internalTrackingNumber},
                #{order.productAvailable},
                #{order.readyForShopifySync},
                #{order.canSend},
                #{order.pickingFee},
                #{order.packagingMaterialFee}
        )
        </foreach>;
    </insert>

    <update id="cancelInvoice">
        UPDATE platform_order po
        JOIN shipping_invoice si ON po.shipping_invoice_number = si.invoice_number
        JOIN shop s ON po.shop_id = s.id
        JOIN client c ON s.owner_id = c.id
        SET po.fret_fee                = NULL,
            po.order_service_fee       = NULL,
            po.shipping_invoice_number = NULL,
            po.picking_fee = 0.0,
            po.packaging_material_fee = 0.0,
            po.erp_status =
                CASE
                    WHEN erp_status = '4' THEN '3'
                    WHEN erp_status = '2' AND si.create_by = 'system' THEN '1'
                ELSE erp_status
                END
        WHERE shipping_invoice_number = #{invoiceNumber}
        AND c.id = #{clientId};
    </update>
    <update id="cancelBatchInvoice">
        UPDATE platform_order
        SET fret_fee                = NULL,
            order_service_fee       = NULL,
            shipping_invoice_number = NULL,
            picking_fee = 0.0,
            packaging_material_fee = 0.0,
            erp_status =
                CASE erp_status
                    WHEN '4' THEN '3'
                ELSE erp_status
                END
        WHERE shipping_invoice_number IN
        <foreach collection="invoiceNumbers" separator="," open="(" close=")" index="index" item="invoiceNumber">
            #{invoiceNumber}
        </foreach>;
    </update>
    <select id="fetchEmptyLogisticChannelOrders" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT id, shop_id, country, platform_order_id
        FROM platform_order po
        WHERE logistic_channel_name = ''
        AND invoice_logistic_channel_name IS NULL
        AND create_time BETWEEN #{startDate} AND #{endDate};
    </select>
    <select id="fetchByIds" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT id, shop_id, product_available, virtual_product_available, purchase_invoice_number
        FROM platform_order
        WHERE id IN
        <foreach collection="orderIds" separator="," open="(" close=")" index="index" item="orderId">
            #{orderId}
        </foreach>;
    </select>
    <select id="fetchOrdersWithProductAvailable" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT po.*
        FROM platform_order po
        JOIN shop s ON po.shop_id = s.id
        JOIN client c ON s.owner_id = c.id
        JOIN client_category cc ON c.client_category_id = cc.id
        WHERE po.product_available = 1
            OR po.virtual_product_available = 1
            AND cc.name = 'self-service'
            AND po.erp_status IN ('1', '2')
        ORDER BY po.order_time;
    </select>
    <select id="fetchOrdersWithMissingStock" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT po.*
        FROM platform_order po
        JOIN shop s ON po.shop_id = s.id
        JOIN client c ON s.owner_id = c.id
        JOIN client_category cc ON c.client_category_id = cc.id
        WHERE po.product_available = 0
            AND po.virtual_product_available = 0
            AND cc.name = 'self-service'
            AND po.erp_status IN ('1', '2')
            AND po.order_time &gt;= #{start}
        ORDER BY po.order_time;
    </select>
    <select id="selectByPlatformOrderIds" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order
        WHERE platform_order_id IN
        <foreach collection="platformOrderIds" separator="," open="(" close=")" index="index" item="platformOrderId">
            #{platformOrderId}
        </foreach>;
    </select>
    <update id="removePurchaseInvoiceNumber">
        UPDATE platform_order
            JOIN shop s ON platform_order.shop_id = s.id
            JOIN client c ON s.owner_id = c.id
        SET purchase_invoice_number = NULL
        WHERE purchase_invoice_number = #{invoiceNumber}
            AND c.id = #{clientId};
    </update>
    <update id="removePurchaseInvoiceNumbers">
        UPDATE platform_order
        SET purchase_invoice_number = NULL
        WHERE purchase_invoice_number IN
        <foreach collection="invoiceNumbers" separator="," open="(" close=")" index="index" item="invoiceNumber">
            #{invoiceNumber}
        </foreach>;
    </update>
    <update id="updatePurchaseInvoiceNumber">
        UPDATE platform_order
        SET purchase_invoice_number = #{invoiceNumber}
        WHERE id IN
        <foreach collection="orderIds" separator="," open="(" close=")" index="index" item="orderId">
            #{orderId}
        </foreach>
    </update>
    <select id="fetchShippingFeeBillableOrders" resultType="org.jeecg.modules.business.vo.ShippingFeeBillableOrders">
        SELECT CONCAT(c.first_name, ' ', c.surname) as full_name, c.email, po.platform_order_number as order_number
        FROM platform_order po
        JOIN shop s ON po.shop_id = s.id
        JOIN client c ON s.owner_id = c.id
        WHERE po.shipping_invoice_number IS NULL
            AND po.purchase_invoice_number IS NOT NULL
            AND po.erp_status IN (1,2)
            AND po.product_available = 1
    </select>
    <select id="getPlatformOrdersByInvoiceNumber" resultType="org.jeecg.modules.business.entity.PlatformOrder">
        SELECT *
        FROM platform_order
        WHERE shipping_invoice_number = #{invoiceNumber};
    </select>
    <select id="countPlatformOrders" resultType="org.jeecg.modules.business.vo.OrderKpi">
        WITH processedByUser AS (
            SELECT invoice_number
            FROM shipping_invoice si
            WHERE create_by = #{username}
            UNION ALL
            SELECT invoice_number
            FROM purchase_order po
            WHERE create_by = #{username}
        ), processed AS (
            SELECT COUNT(*) AS processed
            FROM platform_order
            WHERE erp_status = 4
            AND IF(#{showAllData} = true,
                   shipping_invoice_number IS NOT NULL,
                   (shipping_invoice_number IN (SELECT invoice_number FROM processedByUser) OR purchase_invoice_number IN (SELECT invoice_number FROM processedByUser))
                )
            AND shipping_time BETWEEN #{start} AND #{end}
        ), processing AS (
            SELECT COUNT(*) AS processing
            FROM platform_order
            WHERE erp_status IN (1,2,3)
            AND order_time &lt;= #{end}
            AND IF(#{showAllData} = true,
                   shipping_invoice_number IS NOT NULL,
                   shipping_invoice_number IN (SELECT invoice_number FROM processedByUser) OR purchase_invoice_number IN (SELECT invoice_number FROM processedByUser)
                )
        )
        SELECT processed, processing
        FROM processed, processing;
    </select>
    <select id="fetchShippingPeriodAndType" resultType="java.util.Map">
        SELECT DATE_FORMAT(IF(po.shipping_time &lt; s.create_time, MIN(po.shipping_time), MIN(po.order_time)),'%Y-%m-%d %T') AS startDate,
               DATE_FORMAT(IF(po.shipping_time &lt; s.create_time, MAX(po.shipping_time), MAX(po.order_time)),'%Y-%m-%d %T') AS endDate,
               IF(po.shipping_time &lt; s.create_time, 'post-shipping', 'pre-shipping') AS type
        FROM platform_order po
        JOIN shipping_invoice s ON po.shipping_invoice_number = s.invoice_number
        WHERE shipping_invoice_number = #{invoiceNumber};
    </select>

    <update id="anonymizePersonalData">
        UPDATE platform_order_delete
        SET recipient = UUID()
        WHERE create_time &lt; DATE_SUB(NOW(), INTERVAL #{period} YEAR);
    </update>

    <select id="ordersByShop" resultType="org.jeecg.modules.business.vo.PlatformOrderOption">
        SELECT platform_order_id as value, platform_order_number as label, erp_status, IF(erp_status = 1 OR erp_status = 2, false, true) as disabled
        FROM platform_order
        WHERE shop_id = #{shopID}
        AND erp_status IN (1,2,3)
    </select>
    <select id="fetchUninvoicedOrdersWithSkusInCountry" resultType="java.lang.String">
        SELECT po.platform_order_id
        FROM platform_order po
            JOIN shop ON po.shop_id = shop.id
            JOIN country c ON po.country = c.name_en
            JOIN platform_order_content poc ON po.id = poc.platform_order_id
            JOIN sku s ON poc.sku_id = s.id
        WHERE po.erp_status IN (1,2)
        AND po.can_send = 2
        AND c.code IN
        <foreach
                collection="countries"
                separator=","
                open="("
                close=")"
                index="index"
                item="country"
        >
            #{country}
        </foreach>
        AND shop.erp_code = #{shop}
        AND s.erp_code IN
        <foreach
                collection="skus"
                separator=","
                open="("
                close=")"
                index="index"
                item="sku"
        >
            #{sku}
        </foreach>
        AND order_time &gt;= #{startDate}
        AND order_time &lt;= #{endDate}
        AND shipping_invoice_number IS NULL;
    </select>
    <select id="fetchUninvoicedOrdersWithSkusNotInCountry" resultType="java.lang.String">
        SELECT po.platform_order_id
        FROM platform_order po
            JOIN shop ON po.shop_id = shop.id
            JOIN country c ON po.country = c.name_en
            JOIN platform_order_content poc ON po.id = poc.platform_order_id
            JOIN sku s ON poc.sku_id = s.id
        WHERE po.erp_status IN (1,2)
        AND po.can_send = 2
        AND c.code NOT IN
        <foreach
                collection="countries"
                separator=","
                open="("
                close=")"
                index="index"
                item="country"
        >
            #{country}
        </foreach>
        AND shop.erp_code = #{shop}
        AND s.erp_code IN
        <foreach
                collection="skus"
                separator=","
                open="("
                close=")"
                index="index"
                item="sku"
        >
            #{sku}
        </foreach>
        AND order_time &gt;= #{startDate}
        AND order_time &lt;= #{endDate}
        AND shipping_invoice_number IS NULL;
    </select>
    <select id="findReadyAbnormalOrders" resultType="java.lang.String">
        WITH skusInAbnormalOrders AS (
            SELECT poc.sku_id , poc.platform_order_id, poc.erp_status
            FROM platform_order po
            JOIN platform_order_content poc ON po.id = poc.platform_order_id
            JOIN shop s ON po.shop_id = s.id
            WHERE can_send = 2
            AND po.erp_status IN (1,2)
            AND po.order_time &gt;= NOW() - INTERVAL 5 DAY
            AND s.erp_code IN
            <foreach
                    collection="shops"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="shop">
                #{shop}
            </foreach>
        ),
        orders_with_bad_sku AS (
            SELECT DISTINCT
            CASE
                WHEN s.id IS NULL AND sao.erp_status &lt;&gt; 5 THEN sao.platform_order_id
            END as order_id
            FROM skusInAbnormalOrders sao
            LEFT JOIN sku s ON sao.sku_id = s.id
        ),
        orders_with_skus AS (
            SELECT DISTINCT poc.platform_order_id as id
            FROM platform_order_content poc
            JOIN sku s ON poc.sku_id = s.id
            JOIN platform_order po ON poc.platform_order_id = po.id
            WHERE po.can_send IN (1,2)
            AND po.can_send = 2
            AND po.order_time &gt;= NOW() - INTERVAL 5 DAY
            AND s.erp_code IN
            <foreach
                    collection="skus"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="sku">
                #{sku}
            </foreach>
            AND poc.erp_status &lt;&gt; 5
            AND poc.warehouse_name != '法国巴黎仓库-唯客路'
        ),
        orders_ready AS (
            SELECT po.id as id
            FROM platform_order po
            JOIN shop s ON po.shop_id = s.id
            LEFT JOIN orders_with_bad_sku owbs ON po.id = owbs.order_id
            WHERE owbs.order_id IS NULL
            AND po.erp_status IN (1,2)
            AND po.can_send = 2
            AND po.order_time &gt;= NOW() - INTERVAL 5 DAY
            AND s.erp_code IN
            <foreach
                    collection="shops"
                    separator=","
                    open="("
                    close=")"
                    index="index"
                    item="shop">
                #{shop}
            </foreach>
        )
        SELECT ors.id
        FROM orders_ready ors
        WHERE ors.id NOT IN (SELECT * FROM orders_with_skus);
    </select>
    <select id="findReadyAbnormalOrdersWithSkus" resultType="java.lang.String">
        SELECT DISTINCT poc.platform_order_id
        FROM platform_order_content poc
        JOIN sku s ON poc.sku_id = s.id
        JOIN platform_order po ON poc.platform_order_id = po.id
        WHERE po.can_send IN (1,2)
        AND po.can_send = 2
        AND po.order_time &gt;= NOW() - INTERVAL 5 DAY
        AND s.erp_code IN
        <foreach
            collection="skus"
            separator=","
            open="("
            close=")"
            index="index"
            item="sku">
                #{sku}
        </foreach>
        AND poc.erp_status &lt;&gt; 5
        AND poc.warehouse_name = '法国巴黎仓库-唯客路';
    </select>

    <update id="updateShopifySynced">
        UPDATE platform_order
        SET shopify_synced = 1
        WHERE platform_order_id IN
        <foreach collection="platformOrderIds" separator="," open="(" close=")" index="index" item="platformOrderId">
            #{platformOrderId}
        </foreach>
    </update>

    <select id="fetchShippedOrdersFromShopAndTransporters" resultType="java.lang.String">
        SELECT platform_order_id
        FROM platform_order po join shop s ON po.shop_id = s.id
        WHERE erp_code = #{shopCode}
        AND erp_status = 3
        AND shopify_synced = 0
        AND logistic_channel_name IN
        <foreach
                collection="transporters"
                separator=","
                open="("
                close=")"
                index="index"
                item="transporter">
            #{transporter}
        </foreach>
        ;
    </select>

    <update id="updateLocalTrackingNumber">
        UPDATE platform_order
        SET ready_for_shopify_sync = 1,
            local_tracking_number =
        case platform_order_id
        <foreach collection="data" separator=" " open="" close="" index="index" item="item">
            when #{item.platformOrderId} then #{item.localTrackingNumber}
        </foreach>
        end
        where platform_order_id in
        <foreach collection="data" separator="," open="(" close=")" index="index" item="item">
            #{item.platformOrderId}
        </foreach>
    </update>


    <sql id="pagePotentialShoumanOrders">
        SELECT distinct p.*
        FROM platform_order_content poc
                 JOIN platform_order p ON poc.platform_order_id = p.id
                 JOIN shop sh ON p.shop_id = sh.id
                 JOIN sku s ON poc.sku_id = s.id
                 JOIN shouman_sku_relation ssr ON s.id = ssr.sku_id
                 JOIN shouman_category sc ON ssr.shouman_category_id = sc.id
                 JOIN shouman_regex sr ON sc.id = sr.shouman_category_id
        WHERE p.erp_status in (1, 2)
          AND sr.is_active = 1
          AND p.platform_order_id NOT IN (SELECT platform_order_id FROM shouman_order)
          AND p.create_time > '2024-10-01'
    </sql>

    <select id="pagePotentialShoumanOrders"
            resultType="org.jeecg.modules.business.vo.PlatformOrderPage">
        <include refid="pagePotentialShoumanOrders"/>
        <if test="column != null and order != null">
        ORDER BY ${column} ${order}
        </if>
        LIMIT #{pageNo}, #{pageSize}
    </select>

    <select id="countPotentialShoumanOrders" resultType="java.lang.Integer">
        SELECT count(distinct p.id)
        FROM platform_order_content poc
                 JOIN platform_order p ON poc.platform_order_id = p.id
                 JOIN shop sh ON p.shop_id = sh.id
                 JOIN sku s ON poc.sku_id = s.id
                 JOIN shouman_sku_relation ssr ON s.id = ssr.sku_id
                 JOIN shouman_category sc ON ssr.shouman_category_id = sc.id
                 JOIN shouman_regex sr ON sc.id = sr.shouman_category_id
        WHERE p.erp_status in (1, 2)
          AND sr.is_active = 1
          AND p.platform_order_id NOT IN (SELECT platform_order_id FROM shouman_order)
          AND p.create_time > '2024-10-01'
    </select>
</mapper>
