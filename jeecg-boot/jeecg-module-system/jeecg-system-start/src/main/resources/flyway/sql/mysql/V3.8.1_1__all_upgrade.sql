-- -- author:sunjianlei---date:20250417--for: 【QQYUN-11093】【online】添加Online报表、Online图表的租户ID字段
ALTER TABLE `onl_cgreport_head`
    ADD COLUMN `tenant_id` int NULL DEFAULT 0 COMMENT '租户ID' AFTER `content`;

-- ---author:chenrui-date:20250418-----for: 添加AI流程:积木报表AI引擎
INSERT INTO `airag_flow` (`id`, `create_by`, `create_time`, `update_by`, `update_time`, `sys_org_code`, `tenant_id`, `application_name`, `name`, `descr`, `icon`, `chain`, `design`, `status`, `metadata`) VALUES ('1909856345692065793', 'jeecg', '2025-04-09 14:30:11', 'jeecg', '2025-04-17 20:32:02', 'A04', NULL, 'jeecg', 'JimuReport AI引擎', '', '', 'THEN(\n    start.tag(\'start-node\'),\n    SWITCH(switch.tag(\'173365501230346240\')).to(\n        THEN(\n            llm.tag(\'172956395755208704\'),\n            end.tag(\'172957153284259840\')\n        ).tag(\"172956395755208704\"),\n        THEN(\n            llm.tag(\'173365800833675264\'),\n            end.tag(\'173366253646540800\')\n        ).tag(\"173365800833675264\"),\n        end.tag(\'173366439085109248\'),\n        THEN(\n            llm.tag(\'175149164433014784\'),\n            end.tag(\'175153953988444160\')\n        ).tag(\"175149164433014784\"),\n        THEN(\n            llm.tag(\'175505963485245440\'),\n            end.tag(\'175506006644633600\')\n        ).tag(\"175505963485245440\"),\n        THEN(\n            llm.tag(\'175807569594040320\'),\n            end.tag(\'175808663015538688\')\n        ).tag(\"175807569594040320\")\n    ).tag(\'173365501230346240\')\n).tag(\"start-node\")', '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":262,\"y\":458,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"content\",\"name\":\"用户问题\",\"type\":\"string\",\"required\":true},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":true},{\"field\":\"ddl\",\"name\":\"表结构\",\"type\":\"string\",\"required\":true},{\"field\":\"dbtype\",\"name\":\"数据库类型\",\"type\":\"string\",\"required\":true},{\"field\":\"bizType\",\"name\":\"业务类型\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"172956395755208704\",\"type\":\"llm\",\"x\":1166,\"y\":160,\"properties\":{\"text\":\"生成sql\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"千问coder\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"# 角色：SQL生成助手\\n你是一个专业的SQL语句生成工具，能够根据用户提供的描述和表结构自动生成高效的SQL查询语句。\\n\\n## 目标：\\n- 根据用户的描述生成准确的SQL查询语句。\\n\\n## 技能：\\n1. 理解用户提供的需求和表结构。\\n2. 自动构建符合SQL语法的查询语句。\\n3. 优化生成的SQL以提高执行效率。\\n\\n## 工作流：\\n1. 接收用户描述和表结构信息。\\n2. 分析用户需求，确定所需的SQL操作类型（如查询、插入、更新、删除）。\\n3. 根据分析结果生成相应的SQL语句。\\n\\n## 输出格式：\\n- 生成的SQL语句应为标准格式，如：SELECT * FROM table_name ;\\n- 将输出的SQL语句格式化\\n- 只输出sql语句，不要额外解释，不要md语法，不要换行符，不要有sql注释。\\n\\n## 限制：\\n\\n- 除非明确说明，否则不要生成查询条件\\n- 确保生成的SQL语句符合数据库的语法要求，确保sql能直接执行。\\n- 确保字段和表能正确对应。\"},{\"role\":\"user\",\"content\":\"表结构：\\n{{ddl}}\\n---------\\n数据库类型：\\n{{dbtype}}\\n----------\\n需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"},{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"},{\"field\":\"dbtype\",\"name\":\"dbtype\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"172957153284259840\",\"type\":\"end\",\"x\":1643,\"y\":129,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"sql\",\"nodeId\":\"172956395755208704\"}],\"height\":114,\"width\":332}},{\"id\":\"173365501230346240\",\"type\":\"switch\",\"x\":688,\"y\":536,\"properties\":{\"text\":\"条件分支\",\"options\":{\"if\":[{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"genSql\"}],\"next\":\"172956395755208704\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"genJsonRows\"}],\"next\":\"173365800833675264\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"chooseTables\"}],\"next\":\"175149164433014784\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"genChart\"}],\"next\":\"175505963485245440\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"intentCheck\"}],\"next\":\"175807569594040320\"}],\"else\":{\"next\":\"173366439085109248\"}},\"inputParams\":[],\"outputParams\":[{\"field\":\"index\",\"name\":\"分支索引\",\"type\":\"number\"}],\"height\":222,\"width\":332}},{\"id\":\"173365800833675264\",\"type\":\"llm\",\"x\":1167,\"y\":368,\"properties\":{\"text\":\"生成rows\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"千问coder\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"根据以下数据以及用户需求生成符合要求的表格数据结构。\\n\\n\\n## 工作流程：\\n\\n\\n1. 根据用户需求选择一个合适的数据集\\n2. 根据数据集和需求，生成表格数据。\\n2. 最终输出json\\n\\n\\n## 数据集格式说明：\\n```\\n{\\n  \\\"code\\\": \\\"a\\\",\\n  \\\"title\\\": \\\"a\\\",\\n  \\\"isList\\\": \\\"1\\\",\\n  \\\"children\\\": [\\n    {\\n      \\\"title\\\": \\\"total_sales\\\",\\n      \\\"fieldText\\\": \\\"总销量\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"total_returns\\\",\\n      \\\"fieldText\\\": \\\"总退货数量\\\"\\n    }\\n  ]\\n}\\n```\\n* code：数据集变量名\\n* isList：为”1”表示集合，“0”表示对象\\n* children：为字段列表，包含title（字段名）和fieldText（展示名）\\n⸻\\n## 表格数据结构说明：\\n```\\n{\\n  \\\"0\\\": { \\\"cells\\\": {} }, // 行号作为键\\n  \\\"1\\\": { \\\"cells\\\": { // 每行下有 cells 对象，key 是列号\\n      \\\"1\\\": { \\\"text\\\": \\\"#{a.total_sales}\\\" },\\n      \\\"2\\\": { \\\"text\\\": \\\"#{a.name}\\\" }\\n  }},\\n  \\\"len\\\": 200 // 表格总行数（可固定为200）\\n}\\n```\\n* 每行以序号作为键\\n* 每列下包含 text 为占位符，${} 用于对象，#{} 用于集合\\n* 可包含 style 等附加样式信息\\n⸻\\n\\n\\n## 填充规则：\\n1. 若 isList = 1（集合）：\\n  * 第N行（如 \\\"0\\\"）为字段标题：使用 children.fieldText 填充\\n  * 第N+1行（如 \\\"1\\\"）为字段占位符：使用 `#{code.title}` 填充\\n  * 所有字段占位符占用一行，所有标题占用一行\\n2. 若 isList = 0（对象）：\\n  * 每字段占两列，低N列填字段标题，N+1列填占位符 `${code.title}`\\n  * 共两组：第一组在第n列，第二组在第N+2列\\n\\n\\n⸻\\n\\n\\n## 输出格式\\n* 直接返回JSON数据，不要解释，不要md语法，不要换行符，不要有注释。\\n\\n\\n\\n\\n## 特别注意\\n- 字段的占位必须是`#{}`或`${}`，不能缺失大括号。\\n- 用户描述的序号需要减一才是下标\\n- 确保输出的json格式正确。\\n- 只需要生成一套表格数据。\"},{\"role\":\"user\",\"content\":\"用户数据集：\\n{{ddl}}\\n用户需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"},{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"173366253646540800\",\"type\":\"end\",\"x\":1643,\"y\":336,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"rows\",\"nodeId\":\"173365800833675264\"}],\"height\":114,\"width\":332}},{\"id\":\"173366439085109248\",\"type\":\"end\",\"x\":1158,\"y\":1220,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"error:选择正确的业务类型\"},\"inputParams\":[],\"outputParams\":[],\"height\":136,\"width\":332}},{\"id\":\"175149164433014784\",\"type\":\"llm\",\"x\":1164,\"y\":598,\"properties\":{\"text\":\"选择表\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"千问coder\",\"temperature\":0.7}},\"history\":2,\"messages\":[{\"role\":\"system\",\"content\":\"## 任务\\n根据用户需求，从下方数据库表列表中选择所有关联的表名称。\\n\\n\\n## 数据库表列表（格式：表名 | 注释）\\n{{ddl}}\\n\\n## 输出规则\\n1. 严格按JSON数组格式输出，例如：[\\\"order\\\"]。\\n2. 仅包含表名称，无需注释。\\n3. **禁止添加列表外的表**。\\n4. 表的选择范围可以适当大一些。\\n4. 无业务相关性时输出空数组：[]\\n\\n\\n请回复纯JSON，不要包含其他内容。\"},{\"role\":\"user\",\"content\":\"用户需求：{{question}}\"}]},\"inputParams\":[{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"},{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"175153953988444160\",\"type\":\"end\",\"x\":1643,\"y\":564,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"tables\",\"nodeId\":\"175149164433014784\"}],\"height\":114,\"width\":332}},{\"id\":\"175505963485245440\",\"type\":\"llm\",\"x\":1166,\"y\":802,\"properties\":{\"text\":\"生成图表\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"千问coder\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"根据以下数据以及用户需求生成符合格式要求的图表数据。\\n\\n\\n## 工作流程：\\n\\n\\n1. 根据用户需求选择一个合适的数据集\\n2. 根据数据集和需求，从图表列表中选择一个合适的图标类型。\\n3. 组装最终输出的json\\n\\n\\n⸻\\n## 可选的图表如下（标识|描述）：\\n\\n\\n- 1维图表\\n    - bar.simple|普通柱形图\\n    - bar.background|带背景柱形图\\n    - bar.horizontal|横向柱形图\\n    - line.simple|普通折线图\\n    - line.area|面积堆积折线图\\n    - line.smooth|平滑曲线折线图\\n    - line.step|阶梯折线图\\n    - pie.simple|普通饼图\\n    - pie.doughnut|环状饼图\\n    - pie.rose|南丁格尔玫瑰饼图\\n    - scatter.simple|普通散点图\\n    - funnel.simple|普通漏斗图\\n    - funnel.pyramid|金字塔漏斗图\\n    - pictorial.spirits|普通象形图\\n    - map.scatter|点地图\\n    - gauge.simple|360°仪表盘\\n    - gauge.simple180|180°仪表盘\\n- 2维\\n    - bar.multi|多数据对比柱形图\\n    - bar.negative|正负条形图\\n    - bar.stack|堆叠柱形图\\n    - bar.stack.horizontal|堆叠条形图\\n    - bar.multi.horizontal|多数据条形柱状图\\n    - line.multi|多数据对比折线图\\n    - mixed.linebar|普通折柱图\\n    - scatter.bubble|气泡散点图\\n    - radar.basic|普通雷达图\\n    - radar.custom|圆形雷达图\\n⸻\\n## 数据集格式说明：\\n```\\n{\\n  \\\"dbId\\\": \\\"1069915169263800320\\\",\\n  \\\"code\\\": \\\"a\\\",\\n  \\\"title\\\": \\\"a\\\",\\n  \\\"isList\\\": \\\"1\\\",\\n  \\\"type\\\": \\\"0\\\",\\n  \\\"children\\\": [\\n    {\\n      \\\"title\\\": \\\"total_sales\\\",\\n      \\\"fieldText\\\": \\\"total_sales\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"total_returns\\\",\\n      \\\"fieldText\\\": \\\"total_returns\\\"\\n    }\\n  ]\\n}\\n```\\n* code：数据集变量名\\n* isList：为”1”表示集合，“0”表示对象\\n* children：为字段列表，包含title（字段名）和fieldText（展示名）\\n* type：0|sql,1|api,2|code,3|json\\n⸻\\n## 输出json格式\\n{\\n    \\\"dataType\\\": \\\"sql\\\",\\n    \\\"apiStatus\\\": \\\"0\\\",\\n    \\\"apiUrl\\\": \\\"\\\",\\n    \\\"dataId\\\": \\\"1069898455939633152\\\",\\n    \\\"axisX\\\": \\\"supplier_name\\\",\\n    \\\"axisY\\\": \\\"total_returns\\\",\\n    \\\"series\\\": \\\"material_name\\\",\\n    \\\"yText\\\": \\\"total_returns\\\",\\n    \\\"xText\\\": \\\"supplier_name\\\",\\n    \\\"dbCode\\\": \\\"a\\\",\\n    \\\"isCustomPropName\\\": false,\\n    \\\"chartType\\\": \\\"line.multi\\\",\\n    \\\"id\\\": \\\"0aGl4PUfbIfy8BMF\\\",\\n    \\\"run\\\": 1,\\n    \\\"title\\\": \\\"\\\",\\n}\\n* dataType：与数据集type对应(0|sql,1|api,2|code,3|json)\\n* dataId：对应数据集dbId\\n* dbCode：对应数据集的code\\n* axisX：分类属性，从数据集字段中取值（fieldText)\\n* axisY：值属性，从数据集字段中取值（fieldText)\\n* series: 系列，从数据集字段中取值（fieldText）\\n* xText：分类属性显示，从数据集字段中取值（title)\\n* yText：值属性显示，从数据集字段中取值（title)\\n* chartType：图表的标识\\n* title：为这个图表起一个标题\\n* isCustomPropName: 如果是api数据集,该值为true\\n* apiStatus: 如果是api数据集则等于\\\"1\\\"，否则\\\"0\\\"\\n\\n\\n## 输出格式\\n* 直接返回JSON数据，不要解释，不要md语法，不要换行符，不要有注释。\\n* 确保输出的json格式正确完整。\"},{\"role\":\"user\",\"content\":\"## 用户数据集：\\n{{ddl}}\\n## 用户需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"},{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"175506006644633600\",\"type\":\"end\",\"x\":1643,\"y\":769,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"chart\",\"nodeId\":\"175505963485245440\"}],\"height\":114,\"width\":332}},{\"id\":\"175807569594040320\",\"type\":\"llm\",\"x\":1166,\"y\":1018,\"properties\":{\"text\":\"意图识别\",\"options\":{\"model\":{\"modeId\":\"1897835602959695874\",\"params\":{\"model\":\"qwen-max\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"请根据用户需求与数据集设计，综合判断应执行的工作流步骤，并为每个步骤生成简洁明确的需求描述，同时选择最合适的数据集。\\n\\n\\n---\\n\\n\\n## 可选步骤（格式：标识 | 功能说明）\\n\\n\\n- `genJsonRows` | 生成报表（可选）  \\n- `genChart` | 生成图表（可选）  \\n\\n\\n> **注意：** 至少选择一个步骤，亦可同时选择两者。\\n\\n\\n---\\n\\n\\n## 数据集格式\\n\\n\\n```json\\n{\\n  \\\"dbId\\\": \\\"1069915169263800320\\\",\\n  \\\"code\\\": \\\"a\\\",\\n  \\\"title\\\": \\\"a\\\",\\n  \\\"isList\\\": \\\"1\\\",\\n  \\\"type\\\": \\\"0\\\",\\n  \\\"children\\\": [\\n    {\\n      \\\"title\\\": \\\"total_sales\\\",\\n      \\\"fieldText\\\": \\\"total_sales\\\"\\n    },\\n    {\\n      \\\"title\\\": \\\"total_returns\\\",\\n      \\\"fieldText\\\": \\\"total_returns\\\"\\n    }\\n  ]\\n}\\n* code：数据集变量名\\n* isList：为”1”表示集合，“0”表示对象\\n* children：为字段列表，包含title（展示名）和fieldText（字段名）\\n* type：0|sql,1|api,2|code,3|json\\n\\n\\n⸻\\n## 输出格式\\n\\n\\n```\\n步骤标识1|需求描述1|数据集code,步骤标识2|需求描述2|数据集code\\n```\\n\\n\\n* 各步骤之间用英文逗号,分隔\\n* 不得添加额外说明，不要md语法，不要换行符，不要有注释。\"},{\"role\":\"user\",\"content\":\"## 用户数据集：\\n{{ddl}}\\n## 用户需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"},{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"175808663015538688\",\"type\":\"end\",\"x\":1643,\"y\":985,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"intent\",\"nodeId\":\"175807569594040320\"}],\"height\":114,\"width\":332}}],\"edges\":[{\"id\":\"172957153288454144\",\"type\":\"base-edge\",\"sourceNodeId\":\"172956395755208704\",\"targetNodeId\":\"172957153284259840\",\"sourceAnchorId\":\"172956395755208704_output\",\"targetAnchorId\":\"172957153284259840_input\",\"pointsList\":[{\"x\":1332,\"y\":101},{\"x\":1432,\"y\":101},{\"x\":1377,\"y\":103},{\"x\":1477,\"y\":103}]},{\"id\":\"173365501234540544\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"173365501230346240\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"173365501230346240_input\",\"pointsList\":[{\"x\":428,\"y\":443},{\"x\":528,\"y\":443},{\"x\":422,\"y\":456},{\"x\":522,\"y\":456}]},{\"id\":\"173366253650735104\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365800833675264\",\"targetNodeId\":\"173366253646540800\",\"sourceAnchorId\":\"173365800833675264_output\",\"targetAnchorId\":\"173366253646540800_input\",\"pointsList\":[{\"x\":1333,\"y\":309},{\"x\":1433,\"y\":309},{\"x\":1377,\"y\":310},{\"x\":1477,\"y\":310}]},{\"id\":\"173372961415852032\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"172956395755208704\",\"sourceAnchorId\":\"173365501230346240_source_if\",\"targetAnchorId\":\"172956395755208704_input\",\"pointsList\":[{\"x\":854,\"y\":490},{\"x\":954,\"y\":490},{\"x\":900,\"y\":101},{\"x\":1000,\"y\":101}]},{\"id\":\"173372967073968128\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"173365800833675264\",\"sourceAnchorId\":\"173365501230346240_case_2\",\"targetAnchorId\":\"173365800833675264_input\",\"pointsList\":[{\"x\":854,\"y\":516},{\"x\":954,\"y\":516},{\"x\":901,\"y\":309},{\"x\":1001,\"y\":309}]},{\"id\":\"173372974988619776\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"173366439085109248\",\"sourceAnchorId\":\"173365501230346240_source_else\",\"targetAnchorId\":\"173366439085109248_input\",\"pointsList\":[{\"x\":854,\"y\":620},{\"x\":954,\"y\":620},{\"x\":892,\"y\":1183},{\"x\":992,\"y\":1183}]},{\"id\":\"175149164437209088\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"175149164433014784\",\"sourceAnchorId\":\"173365501230346240_case_3\",\"targetAnchorId\":\"175149164433014784_input\",\"pointsList\":[{\"x\":854,\"y\":542},{\"x\":954,\"y\":542},{\"x\":898,\"y\":539},{\"x\":998,\"y\":539}]},{\"id\":\"175153997969915904\",\"type\":\"base-edge\",\"sourceNodeId\":\"175149164433014784\",\"targetNodeId\":\"175153953988444160\",\"sourceAnchorId\":\"175149164433014784_output\",\"targetAnchorId\":\"175153953988444160_input\",\"pointsList\":[{\"x\":1330,\"y\":539},{\"x\":1430,\"y\":539},{\"x\":1377,\"y\":538},{\"x\":1477,\"y\":538}]},{\"id\":\"175505963489439744\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"175505963485245440\",\"sourceAnchorId\":\"173365501230346240_case_4\",\"targetAnchorId\":\"175505963485245440_input\",\"pointsList\":[{\"x\":854,\"y\":568},{\"x\":954,\"y\":568},{\"x\":900,\"y\":743},{\"x\":1000,\"y\":743}]},{\"id\":\"175506006648827904\",\"type\":\"base-edge\",\"sourceNodeId\":\"175505963485245440\",\"targetNodeId\":\"175506006644633600\",\"sourceAnchorId\":\"175505963485245440_output\",\"targetAnchorId\":\"175506006644633600_input\",\"pointsList\":[{\"x\":1332,\"y\":743},{\"x\":1432,\"y\":743},{\"x\":1377,\"y\":743},{\"x\":1477,\"y\":743}]},{\"id\":\"175807569598234624\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"175807569594040320\",\"sourceAnchorId\":\"173365501230346240_case_5\",\"targetAnchorId\":\"175807569594040320_input\",\"pointsList\":[{\"x\":854,\"y\":594},{\"x\":954,\"y\":594},{\"x\":900,\"y\":959},{\"x\":1000,\"y\":959}]},{\"id\":\"175808663019732992\",\"type\":\"base-edge\",\"sourceNodeId\":\"175807569594040320\",\"targetNodeId\":\"175808663015538688\",\"sourceAnchorId\":\"175807569594040320_output\",\"targetAnchorId\":\"175808663015538688_input\",\"pointsList\":[{\"x\":1332,\"y\":959},{\"x\":1432,\"y\":959},{\"x\":1377,\"y\":959},{\"x\":1477,\"y\":959}]}]}', 'enable', '{\"outputs\":[{\"field\":\"text\",\"name\":\"intent\",\"nodeId\":\"175807569594040320\"},{\"field\":\"outputText\",\"type\":\"string\"}],\"inputs\":[{\"field\":\"content\",\"name\":\"用户问题\",\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\"},{\"field\":\"ddl\",\"name\":\"表结构\",\"type\":\"string\"},{\"field\":\"dbtype\",\"name\":\"数据库类型\",\"type\":\"string\"},{\"field\":\"bizType\",\"name\":\"业务类型\",\"type\":\"string\"}]}');

-- ---author:wangshuai-date:20250418-----for: 添加ocr识别示例 菜单
INSERT INTO sys_permission (id, parent_id, name, url, component, is_route, component_name, redirect, menu_type, perms, perms_type, sort_no, always_show, icon, is_leaf, keep_alive, hidden, hide_tab, description, create_by, create_time, update_by, update_time, del_flag, rule_flag, status, internal_or_external) VALUES ('1912753560201089025', '1438108178010202113', 'OCR识别', '/ai/ocr', 'super/airag/ocr/AiOcrList', 1, '', NULL, 1, NULL, '0', 1.00, 0, 'ant-design:scan-outlined', 1, 0, 0, 0, NULL, 'admin', '2025-04-17 14:22:41', 'admin', '2025-04-18 10:07:40', 0, 0, NULL, 0);

-- ---author:chenrui-date:20250424-----for: 修改示例流程入参,删除多余的入参
UPDATE `airag_flow` SET `create_by` = 'admin', `create_time` = '2025-02-19 20:13:03', `update_by` = 'jeecg', `update_time` = '2025-04-24 12:25:08', `sys_org_code` = 'A04', `tenant_id` = NULL, `application_name` = 'jeecg', `name` = '示例_条件分支', `descr` = NULL, `icon` = NULL, `chain` = 'THEN(\n    start.tag(\'start-node\'),\n    SWITCH(switch.tag(\'a448577f-9824-415b-97f6-72543fcb619d\')).to(\n        end.tag(\'91a7df56-107c-4f83-b1e4-b1b7e392c4e3\'),\n        end.tag(\'162160595291774976\')\n    ).tag(\'a448577f-9824-415b-97f6-72543fcb619d\')\n).tag(\"start-node\")', `design` = '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":300,\"y\":515,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false},{\"field\":\"content\",\"name\":\"用户问题\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"a448577f-9824-415b-97f6-72543fcb619d\",\"type\":\"switch\",\"x\":731,\"y\":486,\"properties\":{\"text\":\"条件分支\",\"options\":{\"if\":[{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"question\",\"operator\":\"CONTAINS\",\"value\":\"jeecg\"}],\"next\":\"162160595291774976\"}],\"else\":{\"next\":\"91a7df56-107c-4f83-b1e4-b1b7e392c4e3\"}},\"inputParams\":[],\"outputParams\":[{\"field\":\"index\",\"name\":\"分支索引\",\"type\":\"number\"}],\"width\":332,\"height\":118}},{\"id\":\"91a7df56-107c-4f83-b1e4-b1b7e392c4e3\",\"type\":\"end\",\"x\":1085,\"y\":662,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"{{res}}不包含jeecg\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"question\",\"name\":\"res\",\"nodeId\":\"start-node\"}],\"height\":136,\"width\":332}},{\"id\":\"162160595291774976\",\"type\":\"end\",\"x\":1084,\"y\":361,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"{{res}}包含jeecg\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"question\",\"name\":\"res\",\"nodeId\":\"start-node\"}],\"height\":136,\"width\":332}}],\"edges\":[{\"id\":\"d5124609-d92e-4966-aff8-e220d0d1dbcd\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"a448577f-9824-415b-97f6-72543fcb619d\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"a448577f-9824-415b-97f6-72543fcb619d_input\",\"pointsList\":[{\"x\":466,\"y\":500},{\"x\":566,\"y\":500},{\"x\":465,\"y\":458},{\"x\":565,\"y\":458}]},{\"id\":\"ea3d924a-e4fd-4bb4-bc8a-d1f07119a7eb\",\"type\":\"base-edge\",\"sourceNodeId\":\"a448577f-9824-415b-97f6-72543fcb619d\",\"targetNodeId\":\"91a7df56-107c-4f83-b1e4-b1b7e392c4e3\",\"sourceAnchorId\":\"a448577f-9824-415b-97f6-72543fcb619d_source_else\",\"targetAnchorId\":\"91a7df56-107c-4f83-b1e4-b1b7e392c4e3_input\",\"pointsList\":[{\"x\":897,\"y\":518},{\"x\":997,\"y\":518},{\"x\":819,\"y\":625},{\"x\":919,\"y\":625}]},{\"id\":\"162161801783320576\",\"type\":\"base-edge\",\"sourceNodeId\":\"a448577f-9824-415b-97f6-72543fcb619d\",\"targetNodeId\":\"162160595291774976\",\"sourceAnchorId\":\"a448577f-9824-415b-97f6-72543fcb619d_source_if\",\"targetAnchorId\":\"162160595291774976_input\",\"pointsList\":[{\"x\":897,\"y\":492},{\"x\":997,\"y\":492},{\"x\":818,\"y\":324},{\"x\":918,\"y\":324}]}]}', `status` = 'enable', `metadata` = '{\"outputs\":[{\"field\":\"outputText\",\"type\":\"string\"}],\"inputs\":[{\"field\":\"question\",\"name\":\"用户问题\",\"required\":true,\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"required\":true,\"type\":\"string[]\"},{\"field\":\"content\",\"name\":\"用户问题\",\"required\":true,\"type\":\"string\"}]}' WHERE `id` = '1892185624983658497';
UPDATE `airag_flow` SET `create_by` = 'jeecg', `create_time` = '2025-02-21 11:11:36', `update_by` = 'jeecg', `update_time` = '2025-04-24 12:27:02', `sys_org_code` = 'A04', `tenant_id` = NULL, `application_name` = 'jeecg', `name` = '示例_LLM', `descr` = '', `icon` = NULL, `chain` = 'THEN(\n    start.tag(\'start-node\'),\n    llm.tag(\'e9f3470a-f129-4baf-880a-294d7b3bff93\'),\n    end.tag(\'9eb6f5c7-94a6-421f-aa39-7cfd7cec44f1\')\n).tag(\"start-node\")', `design` = '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":273,\"y\":419,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false},{\"field\":\"content\",\"name\":\"用户问题\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"e9f3470a-f129-4baf-880a-294d7b3bff93\",\"type\":\"llm\",\"x\":708,\"y\":435,\"properties\":{\"text\":\"llm\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"你将扮演一个人物角色李白，以下是关于这个角色的详细设定，请根据这些信息来构建你的回答。 \\n\\n**人物基本信息：**\\n- 你是：李白\\n- 人称：第一人称\\n- 出身背景与上下文：李白出生于安西都护府碎叶城（今吉尔吉斯斯坦托克马克市附近），五岁时随父迁居绵州昌隆县（今四川江油）。他出身于富商家庭，家境优渥，自幼接受良好的教育，遍览诸子百家之书，展现出极高的文学天赋与才情，且喜好剑术，心怀远大抱负，立志在政治与文学上都有所建树，一生渴望入仕报国，却又历经坎坷波折，在仕途上起起落落，最终在诗酒与游历中度过了其传奇的一生。\\n**性格特点：**\\n- 豪放不羁：他不受世俗礼教束缚，行事洒脱，常以狂放之态示人，饮酒作乐，挥毫泼墨，尽显自由奔放的性情。例如 “我本楚狂人，凤歌笑孔丘”，敢于对传统观念表达自己的不羁态度。\\n- 自信豁达：坚信自己的才华与能力，面对困境与挫折时总能以豁达胸怀看待。像 “天生我材必有用，千金散尽还复来”，即便遭遇仕途不顺、生活潦倒，依然对未来充满信心。\\n- 重情重义：珍视友情，与众多友人诗酒唱和，在与友人分别时也会真情流露，如 “桃花潭水深千尺，不及汪伦送我情”，用深情笔触描绘出对友人的不舍与感激。\\n- 浪漫洒脱：充满天马行空的想象，其诗中多有对神仙世界、奇幻自然的描绘，追求精神上的自由与超脱，如 “飞流直下三千尺，疑是银河落九天” 这般充满奇幻瑰丽想象的诗句便是他浪漫性情的写照。\\n**语言风格：**\\n- 富有想象力与夸张手法：常以夸张的笔触描绘事物，营造出强烈的艺术感染力与震撼力，使读者仿佛身临其境。如 “白发三千丈，缘愁似个长”，用极度夸张的白发长度来形容愁绪之深。 \\n- 语言优美且自然流畅：用词精准华丽，却又毫无雕琢之感，诗句如行云流水般自然，读来朗朗上口，兼具音乐性与节奏感。像 “故人西辞黄鹤楼，烟花三月下扬州。孤帆远影碧空尽，唯见长江天际流”，文字优美，意境深远，节奏明快。 \\n- 善用典故与比喻：通过巧妙运用历史典故和形象比喻，增添诗歌的文化底蕴与内涵深度，使诗句更加含蓄蕴藉又易于理解。例如 “闲来垂钓碧溪上，忽复乘舟梦日边”，借用姜太公垂钓与伊尹梦日的典故表达自己对仕途的期待。 \\n**人际关系：**\\n- 与杜甫：李白与杜甫堪称唐代诗坛的双子星，二人相互倾慕，结下深厚情谊。他们曾一同游历，在诗歌创作上相互切磋交流，杜甫有多首诗表达对李白的思念与敬仰，李白也对杜甫颇为欣赏，他们的友情成为文学史上的佳话。\\n- 与汪伦：汪伦以美酒盛情款待李白，李白深受感动，留下 “桃花潭水深千尺，不及汪伦送我情” 的千古名句，可见他们之间真挚的友情。\\n- 与贺知章：贺知章对李白的才华极为赏识，称其为 “谪仙人”，二人在长安官场与诗坛都有交往，这种知遇之情对李白的声誉与心境都产生了积极影响。\\n- 与唐玄宗：李白曾受唐玄宗征召入宫，供奉翰林，本以为可大展政治抱负，然而玄宗只是将他视为文学侍从，为宫廷宴乐作诗助兴，这段君臣关系最终以李白被赐金放还而告终，使李白在仕途理想上遭受重大挫折。\\n**经典台词或口头禅：**\\n- 台词1：“仰天大笑出门去，我辈岂是蓬蒿人。” 表达出其对自身才华的自信以及即将踏入仕途、一展宏图的豪迈与喜悦。 \\n- 台词2：“安能摧眉折腰事权贵，使我不得开心颜。” 体现出他不向权贵低头，坚守人格尊严与精神自由的高尚情操与不屈性格。\\n- 台词2：“长风破浪会有时，直挂云帆济沧海。” 展现出面对困难时的乐观态度与坚定信念，相信总有一天能够乘风破浪，实现理想抱负。\\n\\n要求： \\n- 根据上述提供的角色设定，以第一人称视角进行表达。 \\n- 在回答时，尽可能地融入该角色的性格特点、语言风格以及其特有的口头禅或经典台词。\\n- 如果适用的话，在适当的地方加入（）内的补充信息，如动作、神情等，以增强对话的真实感和生动性。 \"},{\"role\":\"user\",\"content\":\"{{inParam1}}\"}]},\"inputParams\":[{\"nodeId\":\"start-node\",\"name\":\"inParam1\",\"field\":\"content\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"text\"}],\"width\":332,\"height\":180}},{\"id\":\"9eb6f5c7-94a6-421f-aa39-7cfd7cec44f1\",\"type\":\"end\",\"x\":1186,\"y\":467,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"回复：{{回复内容}}\"},\"inputParams\":[],\"outputParams\":[{\"nodeId\":\"e9f3470a-f129-4baf-880a-294d7b3bff93\",\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"text\"}],\"width\":332,\"height\":136}}],\"edges\":[{\"id\":\"ab818150-d4e5-4be2-8d80-31b7f48dc318\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"e9f3470a-f129-4baf-880a-294d7b3bff93\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"e9f3470a-f129-4baf-880a-294d7b3bff93_input\",\"pointsList\":[{\"x\":439,\"y\":404},{\"x\":539,\"y\":404},{\"x\":442,\"y\":376},{\"x\":542,\"y\":376}]},{\"id\":\"158143255481139200\",\"type\":\"base-edge\",\"sourceNodeId\":\"e9f3470a-f129-4baf-880a-294d7b3bff93\",\"targetNodeId\":\"9eb6f5c7-94a6-421f-aa39-7cfd7cec44f1\",\"sourceAnchorId\":\"e9f3470a-f129-4baf-880a-294d7b3bff93_output\",\"targetAnchorId\":\"9eb6f5c7-94a6-421f-aa39-7cfd7cec44f1_input\",\"pointsList\":[{\"x\":874,\"y\":376},{\"x\":974,\"y\":376},{\"x\":920,\"y\":430},{\"x\":1020,\"y\":430}]}]}', `status` = 'enable', `metadata` = '{\"outputs\":[{\"field\":\"outputText\",\"type\":\"string\"}],\"inputs\":[{\"field\":\"history\",\"name\":\"历史记录\",\"required\":false,\"type\":\"string[]\"},{\"field\":\"content\",\"name\":\"用户问题\",\"required\":true,\"type\":\"string\"}]}' WHERE `id` = '1892774140436287490';
UPDATE `airag_flow` SET `create_by` = 'admin', `create_time` = '2025-03-04 13:45:01', `update_by` = 'jeecg', `update_time` = '2025-04-24 12:26:54', `sys_org_code` = 'A04', `tenant_id` = '', `application_name` = 'jeecg', `name` = '示例_分类器', `descr` = NULL, `icon` = NULL, `chain` = 'THEN(\n    start.tag(\'start-node\'),\n    SWITCH(classifier.tag(\'159899349256073216\')).to(\n        end.tag(\'159899421356158976\'),\n        end.tag(\'159899641326432256\'),\n        end.tag(\'159900616165302272\'),\n        end.tag(\'160202618435485696\')\n    ).tag(\'159899349256073216\')\n).tag(\"start-node\")', `design` = '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":334,\"y\":653,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"content\",\"name\":\"内容\",\"type\":\"string\",\"required\":true},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"159899349256073216\",\"type\":\"classifier\",\"x\":714,\"y\":719,\"properties\":{\"text\":\"分类器\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"gpt-4o-mini\",\"temperature\":0.7}},\"categories\":[{\"category\":\"用户问的问题是关于编程的\",\"next\":\"159899421356158976\"},{\"category\":\"用户问的问题是关于食谱的\",\"next\":\"159899641326432256\"},{\"category\":\"其他问题\",\"next\":\"159900616165302272\"}],\"else\":{\"next\":\"160202618435485696\"}},\"inputParams\":[{\"field\":\"content\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"index\",\"name\":\"分类索引\",\"type\":\"number\"},{\"field\":\"content\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":224,\"width\":332}},{\"id\":\"159899421356158976\",\"type\":\"end\",\"x\":1144,\"y\":566,\"properties\":{\"text\":\"结束1\",\"options\":{\"outputText\":true,\"outputContent\":\"分类：{{分类索引}}\\n-------\\n{{回复内容}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"index\",\"name\":\"分类索引\",\"nodeId\":\"159899349256073216\"},{\"field\":\"content\",\"name\":\"回复内容\",\"nodeId\":\"159899349256073216\"}],\"height\":136,\"width\":332}},{\"id\":\"159899641326432256\",\"type\":\"end\",\"x\":1144,\"y\":715,\"properties\":{\"text\":\"结束2\",\"options\":{\"outputText\":true,\"outputContent\":\"分类：{{分类索引}}\\n-------\\n{{回复内容}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"index\",\"name\":\"分类索引\",\"nodeId\":\"159899349256073216\"},{\"field\":\"content\",\"name\":\"回复内容\",\"nodeId\":\"159899349256073216\"}],\"height\":136,\"width\":332}},{\"id\":\"159900616165302272\",\"type\":\"end\",\"x\":1144,\"y\":864,\"properties\":{\"text\":\"结束3\",\"options\":{\"outputText\":true,\"outputContent\":\"分类：{{分类索引}}\\n-------\\n{{回复内容}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"index\",\"name\":\"分类索引\",\"nodeId\":\"159899349256073216\"},{\"field\":\"content\",\"name\":\"回复内容\",\"nodeId\":\"159899349256073216\"}],\"height\":136,\"width\":332}},{\"id\":\"160202618435485696\",\"type\":\"end\",\"x\":1146,\"y\":1001,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"content\",\"name\":\"res\",\"nodeId\":\"159899349256073216\"}],\"height\":114,\"width\":332}}],\"edges\":[{\"id\":\"159899349260267520\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"159899349256073216\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"159899349256073216_input\",\"pointsList\":[{\"x\":500,\"y\":638},{\"x\":600,\"y\":638},{\"x\":448,\"y\":638},{\"x\":548,\"y\":638}]},{\"id\":\"159899421356158977\",\"type\":\"base-edge\",\"sourceNodeId\":\"159899349256073216\",\"targetNodeId\":\"159899421356158976\",\"sourceAnchorId\":\"159899349256073216_case_1\",\"targetAnchorId\":\"159899421356158976_input\",\"pointsList\":[{\"x\":880,\"y\":672},{\"x\":980,\"y\":672},{\"x\":878,\"y\":529},{\"x\":978,\"y\":529}]},{\"id\":\"159899706925346816\",\"type\":\"base-edge\",\"sourceNodeId\":\"159899349256073216\",\"targetNodeId\":\"159899641326432256\",\"sourceAnchorId\":\"159899349256073216_case_2\",\"targetAnchorId\":\"159899641326432256_input\",\"pointsList\":[{\"x\":880,\"y\":716},{\"x\":980,\"y\":716},{\"x\":878,\"y\":678},{\"x\":978,\"y\":678}]},{\"id\":\"159900640542597120\",\"type\":\"base-edge\",\"sourceNodeId\":\"159899349256073216\",\"targetNodeId\":\"159900616165302272\",\"sourceAnchorId\":\"159899349256073216_case_3\",\"targetAnchorId\":\"159900616165302272_input\",\"pointsList\":[{\"x\":880,\"y\":760},{\"x\":980,\"y\":760},{\"x\":878,\"y\":827},{\"x\":978,\"y\":827}]},{\"id\":\"177966745116012544\",\"type\":\"base-edge\",\"sourceNodeId\":\"159899349256073216\",\"targetNodeId\":\"160202618435485696\",\"sourceAnchorId\":\"159899349256073216_case_else\",\"targetAnchorId\":\"160202618435485696_input\",\"pointsList\":[{\"x\":880,\"y\":804},{\"x\":980,\"y\":804},{\"x\":880,\"y\":975},{\"x\":980,\"y\":975}]}]}', `status` = 'enable', `metadata` = '{\"outputs\":[{\"field\":\"outputText\",\"type\":\"string\"},{\"field\":\"content\",\"name\":\"res\",\"nodeId\":\"159899349256073216\"}],\"inputs\":[{\"field\":\"content\",\"name\":\"内容\",\"required\":true,\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"required\":false,\"type\":\"string[]\"}]}' WHERE `id` = '1896799016980885506';
UPDATE `airag_flow` SET `create_by` = 'jeecg', `create_time` = '2025-03-06 11:01:45', `update_by` = 'jeecg', `update_time` = '2025-04-24 12:27:58', `sys_org_code` = 'A04', `tenant_id` = NULL, `application_name` = 'jeecg', `name` = '示例_脚本组件', `descr` = NULL, `icon` = NULL, `chain` = 'THEN(\n    start.tag(\'start-node\'),\n    code_160582647542648832.tag(\'code_160582647542648832\'),\n    end.tag(\'160583273626406912\')\n).tag(\"start-node\")', `design` = '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":300,\"y\":455,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"content\",\"name\":\"内容\",\"type\":\"string\",\"required\":true},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false},{\"field\":\"question\",\"name\":\"内容2\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"code_160582647542648832\",\"type\":\"code\",\"x\":786,\"y\":488,\"properties\":{\"text\":\"脚本执行\",\"options\":{\"codeType\":\"javascript\",\"code\":\"function main(params) {\\n  return {\\n    result: params.arg1 + \'_拼接_\' + params.arg2,\\n  }\\n}\"},\"inputParams\":[{\"field\":\"content\",\"name\":\"arg1\",\"nodeId\":\"start-node\"},{\"field\":\"question\",\"name\":\"arg2\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"result\",\"name\":\"返回结果\",\"type\":\"string\",\"required\":false}],\"height\":158,\"width\":332}},{\"id\":\"160583273626406912\",\"type\":\"end\",\"x\":1272,\"y\":466,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"{{res}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"result\",\"name\":\"res\",\"nodeId\":\"code_160582647542648832\"}],\"height\":114,\"width\":332}}],\"edges\":[{\"id\":\"160582647546843136\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"code_160582647542648832\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"code_160582647542648832_input\",\"pointsList\":[{\"x\":466,\"y\":440},{\"x\":566,\"y\":440},{\"x\":520,\"y\":440},{\"x\":620,\"y\":440}]},{\"id\":\"160583273626406913\",\"type\":\"base-edge\",\"sourceNodeId\":\"code_160582647542648832\",\"targetNodeId\":\"160583273626406912\",\"sourceAnchorId\":\"code_160582647542648832_output\",\"targetAnchorId\":\"160583273626406912_input\",\"pointsList\":[{\"x\":952,\"y\":440},{\"x\":1052,\"y\":440},{\"x\":1006,\"y\":440},{\"x\":1106,\"y\":440}]}]}', `status` = 'enable', `metadata` = '{\"outputs\":[{\"field\":\"result\",\"name\":\"res\",\"nodeId\":\"code_160582647542648832\"}],\"inputs\":[{\"field\":\"content\",\"name\":\"内容\",\"required\":true,\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"required\":false,\"type\":\"string[]\"}]}' WHERE `id` = '1897482706871164929';
UPDATE `airag_flow` SET `create_by` = 'jeecg', `create_time` = '2025-03-06 11:58:23', `update_by` = 'jeecg', `update_time` = '2025-04-14 14:11:45', `sys_org_code` = 'A04', `tenant_id` = NULL, `application_name` = 'jeecg', `name` = '示例_java增强', `descr` = NULL, `icon` = NULL, `chain` = 'THEN(\n    start.tag(\'start-node\'),\n    enhanceJava.tag(\'160591592557232128\'),\n    end.tag(\'160595080985034752\')\n).tag(\"start-node\")', `design` = '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":300,\"y\":471,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"question\",\"name\":\"问题1\",\"type\":\"string\",\"required\":true},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":true},{\"field\":\"content\",\"name\":\"问题2\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":122,\"width\":332}},{\"id\":\"160591592557232128\",\"type\":\"enhanceJava\",\"x\":786,\"y\":503,\"properties\":{\"text\":\"Java增强\",\"options\":{\"enhance\":{\"type\":\"class\",\"path\":\"org.jeecg.TestAiragEnhance\"}},\"inputParams\":[{\"field\":\"question\",\"name\":\"arg1\",\"nodeId\":\"start-node\"},{\"field\":\"question\",\"name\":\"arg2\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"result\",\"name\":\"返回结果\",\"type\":\"string\",\"required\":false}],\"height\":188,\"width\":332}},{\"id\":\"160595080985034752\",\"type\":\"end\",\"x\":1272,\"y\":492,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"{{res}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"result\",\"name\":\"res\",\"nodeId\":\"160591592557232128\"}],\"height\":166,\"width\":332}}],\"edges\":[{\"id\":\"160591592565620736\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"160591592557232128\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"160591592557232128_input\",\"pointsList\":[{\"x\":466,\"y\":441},{\"x\":566,\"y\":441},{\"x\":520,\"y\":440},{\"x\":620,\"y\":440}]},{\"id\":\"160595080989229056\",\"type\":\"base-edge\",\"sourceNodeId\":\"160591592557232128\",\"targetNodeId\":\"160595080985034752\",\"sourceAnchorId\":\"160591592557232128_output\",\"targetAnchorId\":\"160595080985034752_input\",\"pointsList\":[{\"x\":952,\"y\":440},{\"x\":1052,\"y\":440},{\"x\":1006,\"y\":440},{\"x\":1106,\"y\":440}]}]}', `status` = 'enable', `metadata` = '{\"outputs\":[{\"field\":\"outputText\",\"type\":\"string\"}],\"inputs\":[{\"field\":\"question\",\"name\":\"问题1\",\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\"},{\"field\":\"content\",\"name\":\"问题2\",\"type\":\"string\"}]}' WHERE `id` = '1897496956167577601';

-- ---author:chenrui-date:20250428-----for: 修改示例流程-全部脚本,删除python脚本节点
UPDATE `airag_flow` SET `chain`='THEN(\n    start.tag(\'start-node\'),\n    llm.tag(\'160650416019521536\'),\n    WHEN(\n        code_160652991133433856.tag(\'code_160652991133433856\'),\n        code_166081977564753920.tag(\'code_166081977564753920\'),\n        code_166090618376253440.tag(\'code_166090618376253440\'),\n        code_167835393352683520.tag(\'code_167835393352683520\')\n    ).tag(\"code_160652991133433856\"),\n    end.tag(\'160656278891560960\')\n).tag(\"start-node\")',`design`='{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":300,\"y\":418,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false},{\"field\":\"content\",\"name\":\"用户问题\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"160650416019521536\",\"type\":\"llm\",\"x\":693,\"y\":462,\"properties\":{\"text\":\"LLM\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":null,\"topP\":0.9,\"presencePenalty\":0.1,\"frequencyPenalty\":0.1}},\"history\":4,\"messages\":[{\"role\":\"system\",\"content\":\"# 角色\\n你是一位严厉的长辈，面对用户的问题，要以一种带着隐隐批评，暗示问题简单、用户还有很多需要学习的态度来回复。通过大模型模拟李白来对话，回答用户提出的各种问题。\\n\\n\\n## 技能\\n### 技能 1: 回答问题\\n1. 当用户提出问题时，先简要评价问题较为简单，然后给出回答。\\n2. 回答完问题后，适当提及用户还需要加强学习、增长见识等内容。\\n\\n\\n## 限制:\\n- 回复内容必须逻辑清晰、语言通顺，符合严厉长辈的角色设定。 \\n\\n\"},{\"role\":\"user\",\"content\":\"{{question}}\"}]},\"inputParams\":[{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"code_160652991133433856\",\"type\":\"code\",\"x\":1131,\"y\":87,\"properties\":{\"text\":\"js\",\"options\":{\"codeType\":\"javascript\",\"code\":\"function main(params) {\\n  if(params.llmRes){\\n    let resLength  = params.llmRes.length\\n    params.llmRes = params.llmRes + \'\\\\n字数：\'+resLength\\n  }\\n  return {\\n    result: params.llmRes,\\n  }\\n}\"},\"inputParams\":[{\"field\":\"text\",\"name\":\"llmRes\",\"nodeId\":\"160650416019521536\"}],\"outputParams\":[{\"field\":\"result\",\"name\":\"返回结果\",\"type\":\"string\",\"required\":false}],\"height\":158,\"width\":332}},{\"id\":\"160656278891560960\",\"type\":\"end\",\"x\":1653,\"y\":449,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"js:{{res}}\\ngroovy:{{res1}}\\nkotlin:{{res2}}\\npython:{{res3}}\\naviator:{{res4}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"result\",\"name\":\"res\",\"nodeId\":\"code_160652991133433856\"},{\"field\":\"result\",\"name\":\"res1\",\"nodeId\":\"code_166081977564753920\"},{\"field\":\"result\",\"name\":\"res2\",\"nodeId\":\"code_166090618376253440\"},{\"field\":\"result\",\"name\":\"res3\",\"nodeId\":\"code_167828303175372800\"},{\"field\":\"result\",\"name\":\"res4\",\"nodeId\":\"code_167835393352683520\"}],\"height\":136,\"width\":332}},{\"id\":\"code_166081977564753920\",\"type\":\"code\",\"x\":1141,\"y\":266,\"properties\":{\"text\":\"groovy\",\"options\":{\"codeType\":\"groovy\",\"code\":\"def main(params) {\\n    if (params.llmRes) {\\n        def resLength = params.llmRes.length()\\n        params.llmRes += \\\"\\\\n字数：\\\" + resLength\\n    }\\n    return [result: params.llmRes]\\n}\"},\"inputParams\":[{\"field\":\"text\",\"name\":\"llmRes\",\"nodeId\":\"160650416019521536\"}],\"outputParams\":[{\"field\":\"result\",\"name\":\"返回结果\",\"type\":\"string\",\"required\":false}],\"height\":158,\"width\":332}},{\"id\":\"code_166090618376253440\",\"type\":\"code\",\"x\":1141,\"y\":449,\"properties\":{\"text\":\"kotlin\",\"options\":{\"codeType\":\"kotlin\",\"code\":\"fun main(params: MutableMap<String, Any?>): Map<String, Any?> {\\n    if (params[\\\"llmRes\\\"] is String) {\\n        val llmRes = params[\\\"llmRes\\\"] as String\\n        val resLength = llmRes.length\\n        params[\\\"llmRes\\\"] = \\\"$llmRes\\\\n字数1：$resLength\\\"\\n    }\\n    return mapOf(\\\"result\\\" to params[\\\"llmRes\\\"])\\n}\"},\"inputParams\":[{\"field\":\"text\",\"name\":\"llmRes\",\"nodeId\":\"160650416019521536\"}],\"outputParams\":[{\"field\":\"result\",\"name\":\"返回结果\",\"type\":\"string\",\"required\":false}],\"height\":158,\"width\":332}},{\"id\":\"code_167835393352683520\",\"type\":\"code\",\"x\":1141,\"y\":667,\"properties\":{\"text\":\"aviator\",\"options\":{\"codeType\":\"aviator\",\"code\":\"let llmRes = params.llmRes;\\nlet resLength = length(llmRes);\\nlet  res = llmRes + \\\"\\\\n字数1：\\\" + resLength;\\nlet resp = seq.map(\\\"result\\\",res);\"},\"inputParams\":[{\"field\":\"text\",\"name\":\"llmRes\",\"nodeId\":\"160650416019521536\"}],\"outputParams\":[{\"field\":\"result\",\"name\":\"返回结果\",\"type\":\"string\"}],\"height\":158,\"width\":332}}],\"edges\":[{\"id\":\"160650416019521537\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"160650416019521536\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"160650416019521536_input\",\"pointsList\":[{\"x\":466,\"y\":403},{\"x\":566,\"y\":403},{\"x\":427,\"y\":403},{\"x\":527,\"y\":403}]},{\"id\":\"160652991137628160\",\"type\":\"base-edge\",\"sourceNodeId\":\"160650416019521536\",\"targetNodeId\":\"code_160652991133433856\",\"sourceAnchorId\":\"160650416019521536_output\",\"targetAnchorId\":\"code_160652991133433856_input\",\"pointsList\":[{\"x\":859,\"y\":403},{\"x\":959,\"y\":403},{\"x\":865,\"y\":39},{\"x\":965,\"y\":39}]},{\"id\":\"160656278899949568\",\"type\":\"base-edge\",\"sourceNodeId\":\"code_160652991133433856\",\"targetNodeId\":\"160656278891560960\",\"sourceAnchorId\":\"code_160652991133433856_output\",\"targetAnchorId\":\"160656278891560960_input\",\"pointsList\":[{\"x\":1297,\"y\":39},{\"x\":1397,\"y\":39},{\"x\":1387,\"y\":412},{\"x\":1487,\"y\":412}]},{\"id\":\"166082001409372160\",\"type\":\"base-edge\",\"sourceNodeId\":\"160650416019521536\",\"targetNodeId\":\"code_166081977564753920\",\"sourceAnchorId\":\"160650416019521536_output\",\"targetAnchorId\":\"code_166081977564753920_input\",\"pointsList\":[{\"x\":859,\"y\":403},{\"x\":959,\"y\":403},{\"x\":875,\"y\":218},{\"x\":975,\"y\":218}]},{\"id\":\"166082017557442560\",\"type\":\"base-edge\",\"sourceNodeId\":\"code_166081977564753920\",\"targetNodeId\":\"160656278891560960\",\"sourceAnchorId\":\"code_166081977564753920_output\",\"targetAnchorId\":\"160656278891560960_input\",\"pointsList\":[{\"x\":1307,\"y\":218},{\"x\":1407,\"y\":218},{\"x\":1387,\"y\":412},{\"x\":1487,\"y\":412}]},{\"id\":\"166090719580614656\",\"type\":\"base-edge\",\"sourceNodeId\":\"160650416019521536\",\"targetNodeId\":\"code_166090618376253440\",\"sourceAnchorId\":\"160650416019521536_output\",\"targetAnchorId\":\"code_166090618376253440_input\",\"pointsList\":[{\"x\":859,\"y\":403},{\"x\":959,\"y\":403},{\"x\":875,\"y\":401},{\"x\":975,\"y\":401}]},{\"id\":\"166090725280673792\",\"type\":\"base-edge\",\"sourceNodeId\":\"code_166090618376253440\",\"targetNodeId\":\"160656278891560960\",\"sourceAnchorId\":\"code_166090618376253440_output\",\"targetAnchorId\":\"160656278891560960_input\",\"pointsList\":[{\"x\":1307,\"y\":401},{\"x\":1407,\"y\":401},{\"x\":1387,\"y\":412},{\"x\":1487,\"y\":412}]},{\"id\":\"167835393356877824\",\"type\":\"base-edge\",\"sourceNodeId\":\"160650416019521536\",\"targetNodeId\":\"code_167835393352683520\",\"sourceAnchorId\":\"160650416019521536_output\",\"targetAnchorId\":\"code_167835393352683520_input\",\"pointsList\":[{\"x\":859,\"y\":403},{\"x\":959,\"y\":403},{\"x\":875,\"y\":619},{\"x\":975,\"y\":619}]},{\"id\":\"167836988980817920\",\"type\":\"base-edge\",\"sourceNodeId\":\"code_167835393352683520\",\"targetNodeId\":\"160656278891560960\",\"sourceAnchorId\":\"code_167835393352683520_output\",\"targetAnchorId\":\"160656278891560960_input\",\"pointsList\":[{\"x\":1307,\"y\":619},{\"x\":1407,\"y\":619},{\"x\":1387,\"y\":412},{\"x\":1487,\"y\":412}]}]}' WHERE `id`='1897552224058400770';
-- ---author:chenrui-date:20250430-----for: [QQYUN-11718]【AI】积木报表对接AI流程编排接口展示报表
INSERT INTO `airag_flow` (`id`, `create_by`, `create_time`, `update_by`, `update_time`, `sys_org_code`, `tenant_id`, `application_name`, `name`, `descr`, `icon`, `chain`, `design`, `status`, `metadata`) VALUES ('1917103567932604417', 'jeecg', '2025-04-29 14:28:03', 'jeecg', '2025-04-30 12:06:49', 'A04', NULL, 'jeecg', '示例_数据查询引擎', '', '', 'THEN(\n    start.tag(\'start-node\'),\n    enhanceJava.tag(\'180204885804785664\'),\n    llm.tag(\'180211780498169856\'),\n    end.tag(\'180204420713758720\')\n).tag(\"start-node\")', '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":300,\"y\":376,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"content\",\"name\":\"用户问题\",\"type\":\"string\",\"required\":false},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false},{\"field\":\"pageNo\",\"name\":\"页码\",\"type\":\"number\",\"required\":false},{\"field\":\"pageSize\",\"name\":\"每页数量\",\"type\":\"number\",\"required\":false},{\"field\":\"bizData\",\"name\":\"文件路径\",\"type\":\"string\",\"required\":false}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"180204420713758720\",\"type\":\"end\",\"x\":1648,\"y\":398,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"{{res}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"res\",\"nodeId\":\"180211780498169856\"}],\"height\":136,\"width\":332}},{\"id\":\"180204885804785664\",\"type\":\"enhanceJava\",\"x\":794,\"y\":421,\"properties\":{\"text\":\"Java 增强\",\"options\":{\"enhance\":{\"type\":\"spring\",\"path\":\"jimuDataReader\"}},\"inputParams\":[{\"field\":\"bizData\",\"name\":\"bizData\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"datas\",\"name\":\"返回结果\",\"type\":\"object[]\",\"required\":false},{\"field\":\"fields\",\"name\":\"字段列表\",\"type\":\"string[]\",\"required\":false}],\"height\":180,\"width\":332}},{\"id\":\"180211780498169856\",\"type\":\"llm\",\"x\":1229,\"y\":419,\"properties\":{\"text\":\"LLM\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"将以下数据整理成目标格式输出\\n## 工作流程：\\n1. 读取用户的数据\\n3. 组装最终输出的json\\n⸻\\n## 数据示例:data\\n```\\n{{data}}\\n```\\n## 数据示例:fields\\n```\\n{{fields}}\\n```\\n⸻\\n## 输出json格式\\n{\\n  \\\"data\\\": [\\n    {\\n      \\\"amount\\\": \\\"100\\\",\\n      \\\"month\\\": \\\"1\\\",\\n      \\\"areaname\\\": \\\"华北\\\",\\n      \\\"year\\\": \\\"2020\\\",\\n      \\\"price\\\": \\\"5\\\",\\n      \\\"dept\\\": \\\"河北\\\",\\n      \\\"settleamount\\\": \\\"100\\\"\\n    },\\n    {\\n      \\\"amount\\\": \\\"200\\\",\\n      \\\"month\\\": \\\"2\\\",\\n      \\\"areaname\\\": \\\"华北\\\",\\n      \\\"year\\\": \\\"2020\\\",\\n      \\\"price\\\": \\\"5\\\",\\n      \\\"dept\\\": \\\"河北\\\",\\n      \\\"settleamount\\\": \\\"200\\\"\\n    },\\n  ],\\n  \\\"total\\\": 100,\\n  \\\"count\\\": 100\\n}\\n* total: 分页数，对应数据的总分页数\\n* count: 数据总数，对应数据的总数\\n\\n\\n## 输出格式\\n* 直接返回JSON数据，不要解释，不要md语法，不要换行符，不要有注释。\\n* 统一将key转换成英文，下划线分隔\\n* 确保输出的json格式正确完整。\"},{\"role\":\"user\",\"content\":\"将数据转换为目标格式\"}]},\"inputParams\":[{\"field\":\"datas\",\"name\":\"data\",\"nodeId\":\"180204885804785664\"},{\"field\":\"fields\",\"name\":\"fileds\",\"nodeId\":\"180204885804785664\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}}],\"edges\":[{\"id\":\"180211805085179904\",\"type\":\"base-edge\",\"sourceNodeId\":\"180211780498169856\",\"targetNodeId\":\"180204420713758720\",\"sourceAnchorId\":\"180211780498169856_output\",\"targetAnchorId\":\"180204420713758720_input\",\"pointsList\":[{\"x\":1395,\"y\":360},{\"x\":1495,\"y\":360},{\"x\":1382,\"y\":361},{\"x\":1482,\"y\":361}]},{\"id\":\"180228761381183488\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"180204885804785664\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"180204885804785664_input\",\"pointsList\":[{\"x\":466,\"y\":361},{\"x\":566,\"y\":361},{\"x\":528,\"y\":362},{\"x\":628,\"y\":362}]},{\"id\":\"180511280701620224\",\"type\":\"base-edge\",\"sourceNodeId\":\"180204885804785664\",\"targetNodeId\":\"180211780498169856\",\"sourceAnchorId\":\"180204885804785664_output\",\"targetAnchorId\":\"180211780498169856_input\",\"pointsList\":[{\"x\":960,\"y\":362},{\"x\":1060,\"y\":362},{\"x\":963,\"y\":360},{\"x\":1063,\"y\":360}]}]}', 'enable', '{\"outputs\":[{\"field\":\"outputText\",\"type\":\"string\"}],\"inputs\":[{\"field\":\"content\",\"name\":\"用户问题\",\"required\":false,\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"required\":false,\"type\":\"string[]\"},{\"field\":\"pageNo\",\"name\":\"页码\",\"required\":false,\"type\":\"number\"},{\"field\":\"pageSize\",\"name\":\"每页数量\",\"required\":false,\"type\":\"number\"},{\"field\":\"bizData\",\"name\":\"文件路径\",\"required\":false,\"type\":\"string\"}]}');

-- -- author:sunjianlei---date:20250509--for: 【QQYUN-12064】AI流程增加发布功能（添加注释）
ALTER TABLE `airag_flow`
    MODIFY COLUMN `status` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '状态（enable=启用、disable=禁用、release=发布）' AFTER `design`;

-- -- author:sunjianlei---date:20250513--for: 【QQYUN-12064】AI应用增加发布功能（添加注释）
ALTER TABLE `airag_app`
    MODIFY COLUMN `status` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '状态（enable=启用、disable=禁用、release=发布）' AFTER `flow_id`;
-- -- author:liusq---date:20250509--for: QQYUN-10237 【流程审批】工单授权，没有对online表单的授权（修改注释）

-- ---author:chenrui-date:20250520-----for: [QQYUN-12543]AI测试类未提交
UPDATE `airag_flow` SET `create_by` = 'jeecg', `create_time` = '2025-03-06 11:58:23', `update_by` = 'jeecg', `update_time` = '2025-05-20 10:16:28', `sys_org_code` = 'A04', `tenant_id` = NULL, `application_name` = 'jeecg', `name` = '示例_java增强', `descr` = NULL, `icon` = NULL, `chain` = 'THEN(\n    start.tag(\'start-node\'),\n    enhanceJava.tag(\'160591592557232128\'),\n    end.tag(\'160595080985034752\')\n).tag(\"start-node\")', `design` = '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":300,\"y\":456,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"question\",\"name\":\"问题1\",\"type\":\"string\",\"required\":true},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false},{\"field\":\"content\",\"name\":\"问题2\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"160591592557232128\",\"type\":\"enhanceJava\",\"x\":786,\"y\":499,\"properties\":{\"text\":\"Java增强\",\"options\":{\"enhance\":{\"type\":\"spring\",\"path\":\"testAiragEnhance\"}},\"inputParams\":[{\"field\":\"question\",\"name\":\"arg1\",\"nodeId\":\"start-node\"},{\"field\":\"question\",\"name\":\"arg2\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"result\",\"name\":\"返回结果\",\"type\":\"string\",\"required\":false}],\"height\":158,\"width\":332}},{\"id\":\"160595080985034752\",\"type\":\"end\",\"x\":1272,\"y\":477,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"{{res}}\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"result\",\"name\":\"res\",\"nodeId\":\"160591592557232128\"}],\"height\":136,\"width\":332}}],\"edges\":[{\"id\":\"160591592565620736\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"160591592557232128\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"160591592557232128_input\",\"pointsList\":[{\"x\":466,\"y\":441},{\"x\":566,\"y\":441},{\"x\":520,\"y\":440},{\"x\":620,\"y\":440}]},{\"id\":\"160595080989229056\",\"type\":\"base-edge\",\"sourceNodeId\":\"160591592557232128\",\"targetNodeId\":\"160595080985034752\",\"sourceAnchorId\":\"160591592557232128_output\",\"targetAnchorId\":\"160595080985034752_input\",\"pointsList\":[{\"x\":952,\"y\":440},{\"x\":1052,\"y\":440},{\"x\":1006,\"y\":440},{\"x\":1106,\"y\":440}]}]}', `status` = 'enable', `metadata` = '{\"outputs\":[{\"field\":\"outputText\",\"type\":\"string\"}],\"inputs\":[{\"field\":\"question\",\"name\":\"问题1\",\"required\":true,\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"required\":true,\"type\":\"string[]\"},{\"field\":\"content\",\"name\":\"问题2\",\"required\":true,\"type\":\"string\"}]}' WHERE `id` = '1897496956167577601';

-- ---author:chenrui-date:20250529-----for: [QQYUN-12441]【积木报表】AI生成报表 一直提示失败 后台也没有日志
UPDATE `airag_flow` SET `create_by` = 'jeecg', `create_time` = '2025-04-09 14:30:11', `update_by` = 'admin', `update_time` = '2025-05-28 16:39:13', `sys_org_code` = 'A04', `tenant_id` = NULL, `application_name` = 'jeecg', `name` = 'JimuReport AI引擎', `descr` = '', `icon` = '', `chain` = 'THEN(\n    start.tag(\'start-node\'),\n    SWITCH(switch.tag(\'173365501230346240\')).to(\n        THEN(\n            llm.tag(\'172956395755208704\'),\n            end.tag(\'172957153284259840\')\n        ).tag(\"172956395755208704\"),\n        THEN(\n            llm.tag(\'173365800833675264\'),\n            end.tag(\'173366253646540800\')\n        ).tag(\"173365800833675264\"),\n        end.tag(\'173366439085109248\'),\n        THEN(\n            llm.tag(\'175149164433014784\'),\n            end.tag(\'175153953988444160\')\n        ).tag(\"175149164433014784\"),\n        THEN(\n            llm.tag(\'175505963485245440\'),\n            end.tag(\'175506006644633600\')\n        ).tag(\"175505963485245440\"),\n        THEN(\n            llm.tag(\'175807569594040320\'),\n            end.tag(\'175808663015538688\')\n        ).tag(\"175807569594040320\")\n    ).tag(\'173365501230346240\')\n).tag(\"start-node\")', `design` = '{\"nodes\":[{\"id\":\"start-node\",\"type\":\"start\",\"x\":262,\"y\":458,\"properties\":{\"text\":\"开始\",\"remarks\":\"\",\"options\":{},\"inputParams\":[{\"field\":\"content\",\"name\":\"用户问题\",\"type\":\"string\",\"required\":true},{\"field\":\"history\",\"name\":\"历史记录\",\"type\":\"string[]\",\"required\":false},{\"field\":\"ddl\",\"name\":\"表结构\",\"type\":\"string\",\"required\":true},{\"field\":\"dbtype\",\"name\":\"数据库类型\",\"type\":\"string\",\"required\":true},{\"field\":\"bizType\",\"name\":\"业务类型\",\"type\":\"string\",\"required\":true}],\"outputParams\":[],\"height\":92,\"width\":332}},{\"id\":\"172956395755208704\",\"type\":\"llm\",\"x\":1166,\"y\":160,\"properties\":{\"text\":\"生成sql\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"# 角色：SQL生成助手\\n你是一个专业的SQL语句生成工具，能够根据用户提供的描述和表结构自动生成高效的SQL查询语句。\\n\\n## 目标：\\n- 根据用户的描述生成准确的SQL查询语句。\\n\\n## 技能：\\n1. 理解用户提供的需求和表结构。\\n2. 自动构建符合SQL语法的查询语句。\\n3. 优化生成的SQL以提高执行效率。\\n\\n## 工作流：\\n1. 接收用户描述和表结构信息。\\n2. 分析用户需求，确定所需的SQL操作类型（如查询、插入、更新、删除）。\\n3. 根据分析结果生成相应的SQL语句。\\n\\n## 输出格式：\\n- 生成的SQL语句应为标准格式，如：SELECT * FROM table_name ;\\n- 将输出的SQL语句格式化\\n- 只输出sql语句，不要额外解释，不要md语法，不要换行符，不要有sql注释。\\n\\n## 限制：\\n\\n- 除非明确说明，否则不要生成查询条件\\n- 确保生成的SQL语句符合数据库的语法要求，确保sql能直接执行。\\n- 确保字段和表能正确对应。\"},{\"role\":\"user\",\"content\":\"表结构：\\n{{ddl}}\\n---------\\n数据库类型：\\n{{dbtype}}\\n----------\\n需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"},{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"},{\"field\":\"dbtype\",\"name\":\"dbtype\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"172957153284259840\",\"type\":\"end\",\"x\":1643,\"y\":129,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"sql\",\"nodeId\":\"172956395755208704\"}],\"height\":114,\"width\":332}},{\"id\":\"173365501230346240\",\"type\":\"switch\",\"x\":688,\"y\":536,\"properties\":{\"text\":\"条件分支\",\"options\":{\"if\":[{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"genSql\"}],\"next\":\"172956395755208704\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"genJsonRows\"}],\"next\":\"173365800833675264\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"chooseTables\"}],\"next\":\"175149164433014784\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"genChart\"}],\"next\":\"175505963485245440\"},{\"logic\":\"AND\",\"conditions\":[{\"nodeId\":\"start-node\",\"field\":\"bizType\",\"operator\":\"EQUALS\",\"value\":\"intentCheck\"}],\"next\":\"175807569594040320\"}],\"else\":{\"next\":\"173366439085109248\"}},\"inputParams\":[],\"outputParams\":[{\"field\":\"index\",\"name\":\"分支索引\",\"type\":\"number\"}],\"height\":222,\"width\":332}},{\"id\":\"173365800833675264\",\"type\":\"llm\",\"x\":1167,\"y\":368,\"properties\":{\"text\":\"生成rows\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"根据以下数据以及用户需求生成符合要求的表格数据结构。\\n\\n\\n\\n\\n## 工作流程：\\n\\n\\n\\n\\n1. 根据用户需求选择一个合适的数据集\\n2. 根据数据集和需求，生成表格数据。\\n2. 最终输出json\\n\\n\\n\\n\\n## 数据集格式说明：\\n```\\n{\\n \\\"code\\\": \\\"a\\\",\\n \\\"title\\\": \\\"a\\\",\\n \\\"isList\\\": \\\"1\\\",\\n \\\"children\\\": [\\n  {\\n   \\\"title\\\": \\\"total_sales\\\",\\n   \\\"fieldText\\\": \\\"总销量\\\"\\n  },\\n  {\\n   \\\"title\\\": \\\"total_returns\\\",\\n   \\\"fieldText\\\": \\\"总退货数量\\\"\\n  }\\n ]\\n}\\n```\\n* code：数据集变量名\\n* isList：为”1”表示集合，“0”表示对象\\n* children：为字段列表，包含title（字段名）和fieldText（展示名）\\n⸻\\n## 表格数据结构说明：\\n```\\n{\\n \\\"0\\\": { \\\"cells\\\": {} },\\n \\\"1\\\": { \\\"cells\\\": {\\n   \\\"1\\\": { \\\"text\\\": \\\"#{a.total_sales}\\\" },\\n   \\\"2\\\": { \\\"text\\\": \\\"#{a.name}\\\" }\\n }},\\n \\\"len\\\": 200\\n}\\n```\\n* 行号作为键\\n* 每行下有 cells 对象，key 是列号\\n* 每行以序号作为键\\n* 每列下包含 text 为占位符，${} 用于对象，#{} 用于集合\\n* 可包含 style 等附加样式信息\\n⸻\\n\\n\\n\\n\\n## 填充规则：\\n1. 若 isList = 1（集合）：\\n * 第N行（如 \\\"0\\\"）为字段标题：使用 children.fieldText 填充\\n * 第N+1行（如 \\\"1\\\"）为字段占位符：使用 `#{code.title}` 填充\\n * 所有字段占位符占用一行，所有标题占用一行\\n2. 若 isList = 0（对象）：\\n * 每字段占两列，低N列填字段标题，N+1列填占位符 `${code.title}`\\n * 共两组：第一组在第n列，第二组在第N+2列\\n\\n\\n\\n\\n⸻\\n\\n\\n\\n\\n## 输出格式\\n* 直接返回JSON数据，不要解释，不要md语法，不要换行符，不要有注释。\\n* 确保输出的JSON格式正确，数据中不能包含注释和省略。\\n\\n\\n\\n\\n\\n\\n\\n\\n## 特别注意\\n- 字段的占位必须是`#{}`或`${}`，不能缺失大括号。\\n- 用户描述的序号需要减一才是下标\\n- 确保输出的json格式正确。\\n- 只需要生成一套表格数据。\"},{\"role\":\"user\",\"content\":\"用户数据集：\\n{{ddl}}\\n用户需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"},{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"173366253646540800\",\"type\":\"end\",\"x\":1643,\"y\":336,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"rows\",\"nodeId\":\"173365800833675264\"}],\"height\":114,\"width\":332}},{\"id\":\"173366439085109248\",\"type\":\"end\",\"x\":1158,\"y\":1209,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":true,\"outputContent\":\"error:选择正确的业务类型\"},\"inputParams\":[],\"outputParams\":[],\"height\":114,\"width\":332}},{\"id\":\"175149164433014784\",\"type\":\"llm\",\"x\":1164,\"y\":598,\"properties\":{\"text\":\"选择表\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":0.7}},\"history\":2,\"messages\":[{\"role\":\"system\",\"content\":\"## 任务\\n根据用户需求，从下方数据库表列表中选择所有关联的表名称。\\n\\n\\n## 数据库表列表（格式：表名 | 注释）\\n{{ddl}}\\n\\n## 输出规则\\n1. 严格按JSON数组格式输出，例如：[\\\"order\\\"]。\\n2. 仅包含表名称，无需注释。\\n3. **禁止添加列表外的表**。\\n4. 表的选择范围可以适当大一些。\\n4. 无业务相关性时输出空数组：[]\\n\\n\\n请回复纯JSON，不要包含其他内容。\"},{\"role\":\"user\",\"content\":\"用户需求：{{question}}\"}]},\"inputParams\":[{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"},{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"175153953988444160\",\"type\":\"end\",\"x\":1643,\"y\":564,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"tables\",\"nodeId\":\"175149164433014784\"}],\"height\":114,\"width\":332}},{\"id\":\"175505963485245440\",\"type\":\"llm\",\"x\":1166,\"y\":802,\"properties\":{\"text\":\"生成图表\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"根据以下数据以及用户需求生成符合格式要求的图表数据。\\n\\n\\n## 工作流程：\\n\\n\\n1. 根据用户需求选择一个合适的数据集\\n2. 根据数据集和需求，从图表列表中选择一个合适的图标类型。\\n3. 组装最终输出的json\\n\\n\\n⸻\\n## 可选的图表如下（标识|描述）：\\n\\n\\n- 1维图表\\n  - bar.simple|普通柱形图\\n  - bar.background|带背景柱形图\\n  - bar.horizontal|横向柱形图\\n  - line.simple|普通折线图\\n  - line.area|面积堆积折线图\\n  - line.smooth|平滑曲线折线图\\n  - line.step|阶梯折线图\\n  - pie.simple|普通饼图\\n  - pie.doughnut|环状饼图\\n  - pie.rose|南丁格尔玫瑰饼图\\n  - scatter.simple|普通散点图\\n  - funnel.simple|普通漏斗图\\n  - funnel.pyramid|金字塔漏斗图\\n  - pictorial.spirits|普通象形图\\n  - map.scatter|点地图\\n  - gauge.simple|360°仪表盘\\n  - gauge.simple180|180°仪表盘\\n- 2维\\n  - bar.multi|多数据对比柱形图\\n  - bar.negative|正负条形图\\n  - bar.stack|堆叠柱形图\\n  - bar.stack.horizontal|堆叠条形图\\n  - bar.multi.horizontal|多数据条形柱状图\\n  - line.multi|多数据对比折线图\\n  - mixed.linebar|普通折柱图\\n  - scatter.bubble|气泡散点图\\n  - radar.basic|普通雷达图\\n  - radar.custom|圆形雷达图\\n⸻\\n## 数据集格式说明：\\n```\\n{\\n \\\"dbId\\\": \\\"1069915169263800320\\\",\\n \\\"code\\\": \\\"a\\\",\\n \\\"title\\\": \\\"a\\\",\\n \\\"isList\\\": \\\"1\\\",\\n \\\"type\\\": \\\"0\\\",\\n \\\"children\\\": [\\n  {\\n   \\\"title\\\": \\\"total_sales\\\",\\n   \\\"fieldText\\\": \\\"total_sales\\\"\\n  },\\n  {\\n   \\\"title\\\": \\\"total_returns\\\",\\n   \\\"fieldText\\\": \\\"total_returns\\\"\\n  }\\n ]\\n}\\n```\\n* code：数据集变量名\\n* isList：为”1”表示集合，“0”表示对象\\n* children：为字段列表，包含title（字段名）和fieldText（展示名）\\n* type：0|sql,1|api,2|code,3|json\\n⸻\\n## 输出json格式\\n{\\n  \\\"dataType\\\": \\\"sql\\\",\\n  \\\"apiStatus\\\": \\\"0\\\",\\n  \\\"apiUrl\\\": \\\"\\\",\\n  \\\"dataId\\\": \\\"1069898455939633152\\\",\\n  \\\"axisX\\\": \\\"supplier_name\\\",\\n  \\\"axisY\\\": \\\"total_returns\\\",\\n  \\\"series\\\": \\\"material_name\\\",\\n  \\\"yText\\\": \\\"total_returns\\\",\\n  \\\"xText\\\": \\\"supplier_name\\\",\\n  \\\"dbCode\\\": \\\"a\\\",\\n  \\\"isCustomPropName\\\": false,\\n  \\\"chartType\\\": \\\"line.multi\\\",\\n  \\\"id\\\": \\\"0aGl4PUfbIfy8BMF\\\",\\n  \\\"run\\\": 1,\\n  \\\"title\\\": \\\"\\\",\\n}\\n* dataType：与数据集type对应(0|sql,1|api,2|code,3|json)\\n* dataId：对应数据集dbId\\n* dbCode：对应数据集的code\\n* axisX：分类属性，从数据集字段中取值（fieldText)\\n* axisY：值属性，从数据集字段中取值（fieldText)\\n* series: 系列，从数据集字段中取值（fieldText）\\n* xText：分类属性显示，从数据集字段中取值（title)\\n* yText：值属性显示，从数据集字段中取值（title)\\n* chartType：图表的标识\\n* title：为这个图表起一个标题\\n* isCustomPropName: 如果是api数据集,该值为true\\n* apiStatus: 如果是api数据集则等于\\\"1\\\"，否则\\\"0\\\"\\n\\n\\n## 输出格式\\n* 直接返回JSON数据，不要解释，不要md语法，不要换行符，不要有注释。\\n* 确保输出的json格式正确完整。\"},{\"role\":\"user\",\"content\":\"## 用户数据集：\\n{{ddl}}\\n## 用户需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"},{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"175506006644633600\",\"type\":\"end\",\"x\":1643,\"y\":769,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"chart\",\"nodeId\":\"175505963485245440\"}],\"height\":114,\"width\":332}},{\"id\":\"175807569594040320\",\"type\":\"llm\",\"x\":1166,\"y\":1018,\"properties\":{\"text\":\"意图识别\",\"options\":{\"model\":{\"modeId\":\"1890232564262739969\",\"params\":{\"model\":\"OpenAI\",\"temperature\":0.7}},\"history\":3,\"messages\":[{\"role\":\"system\",\"content\":\"请根据用户需求与数据集设计，综合判断应执行的工作流步骤，并为每个步骤生成简洁明确的需求描述，同时选择最合适的数据集。\\n---\\n## 可选步骤（格式：标识 | 功能说明）\\n- `genJsonRows` | 生成报表（可选）\\n- `genChart` | 生成图表（可选）\\n> **注意：** 至少选择一个步骤，亦可同时选择两者；图表的权重较低。\\n---\\n## 数据集格式\\n```json\\n{\\n \\\"dbId\\\": \\\"1069915169263800320\\\",\\n \\\"code\\\": \\\"a\\\",\\n \\\"title\\\": \\\"a\\\",\\n \\\"isList\\\": \\\"1\\\",\\n \\\"type\\\": \\\"0\\\",\\n \\\"children\\\": [\\n  {\\n   \\\"title\\\": \\\"total_sales\\\",\\n   \\\"fieldText\\\": \\\"total_sales\\\"\\n  },\\n  {\\n   \\\"title\\\": \\\"total_returns\\\",\\n   \\\"fieldText\\\": \\\"total_returns\\\"\\n  }\\n ]\\n}\\n* code：数据集变量名\\n* isList：为”1”表示集合，“0”表示对象\\n* children：为字段列表，包含title（展示名）和fieldText（字段名）\\n* type：0|sql,1|api,2|code,3|json\\n⸻\\n## 输出格式\\n```\\n步骤标识1|需求描述1|数据集code,步骤标识2|需求描述2|数据集code\\n```\\n* 各步骤之间用英文逗号,分隔\\n* 不得添加额外说明，不要md语法，不要换行符，不要有注释。\"},{\"role\":\"user\",\"content\":\"## 用户数据集：\\n{{ddl}}\\n## 用户需求：\\n{{question}}\"}]},\"inputParams\":[{\"field\":\"content\",\"name\":\"question\",\"nodeId\":\"start-node\"},{\"field\":\"ddl\",\"name\":\"ddl\",\"nodeId\":\"start-node\"}],\"outputParams\":[{\"field\":\"text\",\"name\":\"回复内容\",\"type\":\"string\"}],\"height\":180,\"width\":332}},{\"id\":\"175808663015538688\",\"type\":\"end\",\"x\":1643,\"y\":985,\"properties\":{\"text\":\"结束\",\"options\":{\"outputText\":false,\"outputContent\":\"\"},\"inputParams\":[],\"outputParams\":[{\"field\":\"text\",\"name\":\"intent\",\"nodeId\":\"175807569594040320\"}],\"height\":114,\"width\":332}}],\"edges\":[{\"id\":\"172957153288454144\",\"type\":\"base-edge\",\"sourceNodeId\":\"172956395755208704\",\"targetNodeId\":\"172957153284259840\",\"sourceAnchorId\":\"172956395755208704_output\",\"targetAnchorId\":\"172957153284259840_input\",\"pointsList\":[{\"x\":1332,\"y\":101},{\"x\":1432,\"y\":101},{\"x\":1377,\"y\":103},{\"x\":1477,\"y\":103}]},{\"id\":\"173365501234540544\",\"type\":\"base-edge\",\"sourceNodeId\":\"start-node\",\"targetNodeId\":\"173365501230346240\",\"sourceAnchorId\":\"start-node_output\",\"targetAnchorId\":\"173365501230346240_input\",\"pointsList\":[{\"x\":428,\"y\":443},{\"x\":528,\"y\":443},{\"x\":422,\"y\":456},{\"x\":522,\"y\":456}]},{\"id\":\"173366253650735104\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365800833675264\",\"targetNodeId\":\"173366253646540800\",\"sourceAnchorId\":\"173365800833675264_output\",\"targetAnchorId\":\"173366253646540800_input\",\"pointsList\":[{\"x\":1333,\"y\":309},{\"x\":1433,\"y\":309},{\"x\":1377,\"y\":310},{\"x\":1477,\"y\":310}]},{\"id\":\"173372961415852032\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"172956395755208704\",\"sourceAnchorId\":\"173365501230346240_source_if\",\"targetAnchorId\":\"172956395755208704_input\",\"pointsList\":[{\"x\":854,\"y\":490},{\"x\":954,\"y\":490},{\"x\":900,\"y\":101},{\"x\":1000,\"y\":101}]},{\"id\":\"173372967073968128\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"173365800833675264\",\"sourceAnchorId\":\"173365501230346240_case_2\",\"targetAnchorId\":\"173365800833675264_input\",\"pointsList\":[{\"x\":854,\"y\":516},{\"x\":954,\"y\":516},{\"x\":901,\"y\":309},{\"x\":1001,\"y\":309}]},{\"id\":\"173372974988619776\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"173366439085109248\",\"sourceAnchorId\":\"173365501230346240_source_else\",\"targetAnchorId\":\"173366439085109248_input\",\"pointsList\":[{\"x\":854,\"y\":620},{\"x\":954,\"y\":620},{\"x\":892,\"y\":1183},{\"x\":992,\"y\":1183}]},{\"id\":\"175149164437209088\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"175149164433014784\",\"sourceAnchorId\":\"173365501230346240_case_3\",\"targetAnchorId\":\"175149164433014784_input\",\"pointsList\":[{\"x\":854,\"y\":542},{\"x\":954,\"y\":542},{\"x\":898,\"y\":539},{\"x\":998,\"y\":539}]},{\"id\":\"175153997969915904\",\"type\":\"base-edge\",\"sourceNodeId\":\"175149164433014784\",\"targetNodeId\":\"175153953988444160\",\"sourceAnchorId\":\"175149164433014784_output\",\"targetAnchorId\":\"175153953988444160_input\",\"pointsList\":[{\"x\":1330,\"y\":539},{\"x\":1430,\"y\":539},{\"x\":1377,\"y\":538},{\"x\":1477,\"y\":538}]},{\"id\":\"175505963489439744\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"175505963485245440\",\"sourceAnchorId\":\"173365501230346240_case_4\",\"targetAnchorId\":\"175505963485245440_input\",\"pointsList\":[{\"x\":854,\"y\":568},{\"x\":954,\"y\":568},{\"x\":900,\"y\":743},{\"x\":1000,\"y\":743}]},{\"id\":\"175506006648827904\",\"type\":\"base-edge\",\"sourceNodeId\":\"175505963485245440\",\"targetNodeId\":\"175506006644633600\",\"sourceAnchorId\":\"175505963485245440_output\",\"targetAnchorId\":\"175506006644633600_input\",\"pointsList\":[{\"x\":1332,\"y\":743},{\"x\":1432,\"y\":743},{\"x\":1377,\"y\":743},{\"x\":1477,\"y\":743}]},{\"id\":\"175807569598234624\",\"type\":\"base-edge\",\"sourceNodeId\":\"173365501230346240\",\"targetNodeId\":\"175807569594040320\",\"sourceAnchorId\":\"173365501230346240_case_5\",\"targetAnchorId\":\"175807569594040320_input\",\"pointsList\":[{\"x\":854,\"y\":594},{\"x\":954,\"y\":594},{\"x\":900,\"y\":959},{\"x\":1000,\"y\":959}]},{\"id\":\"175808663019732992\",\"type\":\"base-edge\",\"sourceNodeId\":\"175807569594040320\",\"targetNodeId\":\"175808663015538688\",\"sourceAnchorId\":\"175807569594040320_output\",\"targetAnchorId\":\"175808663015538688_input\",\"pointsList\":[{\"x\":1332,\"y\":959},{\"x\":1432,\"y\":959},{\"x\":1377,\"y\":959},{\"x\":1477,\"y\":959}]}]}', `status` = 'release', `metadata` = '{\"outputs\":[{\"field\":\"text\",\"name\":\"intent\",\"nodeId\":\"175807569594040320\"},{\"field\":\"outputText\",\"type\":\"string\"}],\"inputs\":[{\"field\":\"content\",\"name\":\"用户问题\",\"required\":true,\"type\":\"string\"},{\"field\":\"history\",\"name\":\"历史记录\",\"required\":false,\"type\":\"string[]\"},{\"field\":\"ddl\",\"name\":\"表结构\",\"required\":true,\"type\":\"string\"},{\"field\":\"dbtype\",\"name\":\"数据库类型\",\"required\":true,\"type\":\"string\"},{\"field\":\"bizType\",\"name\":\"业务类型\",\"required\":true,\"type\":\"string\"}]}' WHERE `id` = '1909856345692065793';

-- ---author:liusq-date:20250606-----for: [issues/8337]关于ai工作列表的数据权限问题 #8337
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930223132619112449', '1890213291321749505', '删除AI流程', NULL, NULL, 0, NULL, NULL, 2, 'airag:flow:delete', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:20:31', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930223034757611522', '1890213291321749505', '保存AI流程设计', NULL, NULL, 0, NULL, NULL, 2, 'airag:flow:designSave', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:20:08', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222953853681666', '1890213291321749505', '编辑AI流程', NULL, NULL, 0, NULL, NULL, 2, 'airag:flow:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:19:49', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222862556266498', '1890213291321749505', '新增AI流程', NULL, NULL, 0, NULL, NULL, 2, 'airag:flow:add', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:19:27', 'admin', '2025-06-04 19:21:08', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222679269376001', '1892553778493022209', '删除AI模型', NULL, NULL, 0, NULL, NULL, 2, 'airag:model:delete', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:18:43', 'admin', '2025-06-04 19:21:24', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222617197871105', '1892553778493022209', '编辑AI模型', NULL, NULL, 0, NULL, NULL, 2, 'airag:model:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:18:28', 'admin', '2025-06-04 19:21:20', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222558582472705', '1892553778493022209', '新增AI模型', NULL, NULL, 0, NULL, NULL, 2, 'airag:model:add', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:18:14', 'admin', '2025-06-04 19:21:16', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222395180777474', '1892557342028226561', '清空AI知识库文档', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:doc:deleteAll', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:17:35', 'admin', '2025-06-04 19:22:25', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222295012409345', '1892557342028226561', '批量删除AI知识库文档', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:doc:deleteBatch', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:17:12', 'admin', '2025-06-04 19:22:21', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222218734796802', '1892557342028226561', '向量化AI知识库文档', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:doc:rebuild', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:16:53', 'admin', '2025-06-04 19:22:16', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930222066120851457', '1892557342028226561', '导入AI知识库文档', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:doc:zip', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:16:17', 'admin', '2025-06-04 19:22:09', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930221983555977217', '1892557342028226561', '新增编辑AI知识库文档', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:doc:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:15:57', 'admin', '2025-06-04 19:22:03', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930221774230847490', '1892557342028226561', '删除AI知识库', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:delete', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:15:07', 'admin', '2025-06-04 19:21:52', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930221702164316161', '1892557342028226561', '重建AI知识库', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:rebuild', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:14:50', 'admin', '2025-06-04 19:21:46', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930221637551063042', '1892557342028226561', '编辑AI知识库', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:14:35', 'admin', '2025-06-04 19:21:42', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930221570324758530', '1892557342028226561', '添加AI知识库', NULL, NULL, 0, NULL, NULL, 2, 'airag:knowledge:add', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:14:19', 'admin', '2025-06-04 19:21:38', 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930221335938662401', '1893865471550578689', '删除AI应用', NULL, NULL, 0, NULL, NULL, 2, 'airag:app:delete', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:13:23', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('1930221213607591937', '1893865471550578689', '新增或编辑AI应用', NULL, NULL, 0, NULL, NULL, 2, 'airag:app:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2025-06-04 19:12:54', NULL, NULL, 0, 0, '1', 0);

UPDATE sys_permission  SET is_leaf = 0 WHERE id IN ( '1890213291321749505','1892553778493022209', '1892557342028226561', '1893865471550578689' );

-- ---author:lvdandan-date:20250612-----for: 门户示例api域名修改
UPDATE onl_drag_dataset_head
SET query_sql = REPLACE(query_sql, 'apijeecgcom', 'api.jeecg.com')
WHERE query_sql LIKE '%https://apijeecgcom%';